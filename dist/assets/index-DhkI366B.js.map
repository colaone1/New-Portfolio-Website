{"version":3,"file":"index-DhkI366B.js","sources":["../../js/navigation.js","../../js/components/modal.js","../../js/components/alert.js","../../js/components/loading.js","../../js/main.js"],"sourcesContent":["/**\n * Navigation module for handling mobile menu, smooth scrolling, and active link highlighting\n * Based on the original implementation from Sam's Portfolio Website\n *\n * AI-OPTIMIZED: Includes troubleshooting comments and robust error handling for navigation and event listeners.\n */\n\nexport class Navigation {\n  constructor() {\n    // Preserve existing navigation elements\n    this.mobileMenuButton = document.querySelector('[data-mobile-menu-button]');\n    this.mobileMenu = document.querySelector('[data-mobile-menu]');\n    this.navLinks = document.querySelectorAll('[data-nav-link]');\n    this.isMenuOpen = false;\n\n    // Initialize navigation\n    try {\n      this.init();\n    } catch (err) {\n      // TROUBLESHOOTING: Navigation failed to initialize\n      console.error('Navigation init error:', err);\n    }\n    this.observeThemeChange();\n  }\n\n  init() {\n    // Initialize mobile menu\n    if (this.mobileMenuButton && this.mobileMenu) {\n      this.mobileMenuButton.addEventListener('click', () => {\n        try {\n          this.toggleMenu();\n        } catch (err) {\n          // TROUBLESHOOTING: Mobile menu toggle failed\n          console.error('Mobile menu toggle error:', err);\n        }\n      });\n\n      // Close menu when clicking outside\n      document.addEventListener('click', e => {\n        try {\n          // Prevent closing menu when clicking the theme toggle\n          const themeToggle = document.getElementById('theme-toggle');\n          if (\n            this.isMenuOpen &&\n            !e.target.closest('[data-mobile-menu]') &&\n            !e.target.closest('[data-mobile-menu-button]') &&\n            (!themeToggle || (!themeToggle.contains(e.target) && e.target !== themeToggle))\n          ) {\n            this.closeMenu();\n          }\n        } catch (err) {\n          // TROUBLESHOOTING: Outside click close failed\n          console.error('Menu close on outside click error:', err);\n        }\n      });\n    }\n\n    // Initialize smooth scrolling\n    this.navLinks.forEach(link => {\n      link.addEventListener('click', e => {\n        try {\n          const href = link.getAttribute('href');\n          if (href.startsWith('#')) {\n            e.preventDefault();\n            this.scrollToSection(href);\n            this.closeMenu();\n          }\n        } catch (err) {\n          // TROUBLESHOOTING: Smooth scroll failed\n          console.error('Smooth scroll error:', err);\n        }\n      });\n    });\n\n    // Initialize active link highlighting\n    try {\n      this.updateActiveLink();\n      window.addEventListener('scroll', () => this.updateActiveLink());\n    } catch (err) {\n      // TROUBLESHOOTING: Active link highlighting failed\n      console.error('Active link highlighting error:', err);\n    }\n  }\n\n  toggleMenu() {\n    this.isMenuOpen = !this.isMenuOpen;\n    this.mobileMenuButton.setAttribute('aria-expanded', this.isMenuOpen);\n    this.mobileMenu.classList.toggle('active');\n\n    // Prevent body scroll when menu is open\n    document.body.style.overflow = this.isMenuOpen ? 'hidden' : '';\n  }\n\n  closeMenu() {\n    this.isMenuOpen = false;\n    this.mobileMenuButton.setAttribute('aria-expanded', 'false');\n    this.mobileMenu.classList.remove('active');\n    document.body.style.overflow = '';\n  }\n\n  scrollToSection(sectionId) {\n    const section = document.querySelector(sectionId);\n    if (section) {\n      const headerOffset = 80; // Adjust based on your header height\n      const elementPosition = section.getBoundingClientRect().top;\n      const offsetPosition =\n        elementPosition + window.pageYOffset - headerOffset;\n\n      window.scrollTo({\n        top: offsetPosition,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  updateActiveLink() {\n    const sections = document.querySelectorAll('section[id]');\n    const scrollPosition = window.pageYOffset;\n\n    sections.forEach(section => {\n      const sectionTop = section.offsetTop - 100;\n      const sectionHeight = section.offsetHeight;\n      const sectionId = section.getAttribute('id');\n\n      if (\n        scrollPosition >= sectionTop &&\n        scrollPosition < sectionTop + sectionHeight\n      ) {\n        this.navLinks.forEach(link => {\n          link.classList.remove('active');\n          if (link.getAttribute('href') === `#${sectionId}`) {\n            link.classList.add('active');\n          }\n        });\n      }\n    });\n  }\n\n  // Add this method to observe theme changes\n  observeThemeChange() {\n    const observer = new MutationObserver(() => {\n      // Just trigger a reflow or update if needed, but do not close the menu\n      if (this.isMenuOpen) {\n        // Optionally, force a redraw or update menu styles if needed\n        this.mobileMenu.classList.remove('force-repaint');\n        void this.mobileMenu.offsetWidth;\n        this.mobileMenu.classList.add('force-repaint');\n      }\n    });\n    observer.observe(document.documentElement, { attributes: true, attributeFilter: ['data-theme'] });\n  }\n}\n","// AI-OPTIMIZED: Modal component - Accessible overlay dialogs\nexport class Modal {\n  constructor(options = {}) {\n    // IMPORTANT: Default configuration\n    this.options = {\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      autoFocus: true,\n      ...options,\n    };\n\n    this.modal = null;\n    this.backdrop = null;\n    this.previousFocus = null;\n    this.focusableElements = [];\n    this.isOpen = false;\n\n    // AI-OPTIMIZED: Bind methods to preserve context\n    this.handleKeydown = this.handleKeydown.bind(this);\n    this.handleBackdropClick = this.handleBackdropClick.bind(this);\n    this.close = this.close.bind(this);\n  }\n\n  // IMPORTANT: Create modal structure\n  create(content, title = '') {\n    // AI-OPTIMIZED: Create backdrop\n    if (this.options.backdrop) {\n      this.backdrop = document.createElement('div');\n      this.backdrop.className = 'modal-backdrop';\n      this.backdrop.setAttribute('aria-hidden', 'true');\n      this.backdrop.addEventListener('click', this.handleBackdropClick);\n    }\n\n    // AI-OPTIMIZED: Create modal container\n    this.modal = document.createElement('div');\n    this.modal.className = 'modal';\n    this.modal.setAttribute('role', 'dialog');\n    this.modal.setAttribute('aria-modal', 'true');\n    this.modal.setAttribute('aria-labelledby', title ? 'modal-title' : '');\n\n    // AI-OPTIMIZED: Generate unique ID for modal\n    const modalId = `modal-${Date.now()}`;\n    this.modal.id = modalId;\n\n    // AI-OPTIMIZED: Build modal HTML structure\n    this.modal.innerHTML = `\n      <div class=\"modal__header\">\n        ${title ? `<h2 class=\"modal__title\" id=\"modal-title\">${title}</h2>` : ''}\n        <button class=\"modal__close\" aria-label=\"Close modal\" type=\"button\">\n          <svg class=\"modal__close-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" aria-hidden=\"true\">\n            <path d=\"M18 6L6 18M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n      <div class=\"modal__body\">\n        ${content}\n      </div>\n    `;\n\n    // AI-OPTIMIZED: Add event listeners\n    const closeButton = this.modal.querySelector('.modal__close');\n    closeButton.addEventListener('click', this.close);\n\n    // AI-OPTIMIZED: Add to DOM\n    if (this.backdrop) {\n      document.body.appendChild(this.backdrop);\n    }\n    document.body.appendChild(this.modal);\n\n    // AI-OPTIMIZED: Store focusable elements\n    this.focusableElements = this.modal.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    );\n\n    return this;\n  }\n\n  // IMPORTANT: Open modal with accessibility features\n  open() {\n    if (this.isOpen) return;\n\n    // AI-OPTIMIZED: Store current focus\n    this.previousFocus = document.activeElement;\n\n    // AI-OPTIMIZED: Show modal and backdrop\n    if (this.backdrop) {\n      this.backdrop.classList.add('is-active');\n    }\n    this.modal.classList.add('is-active');\n\n    // AI-OPTIMIZED: Set focus to modal\n    if (this.options.focus) {\n      this.modal.focus();\n    }\n\n    // AI-OPTIMIZED: Auto-focus first focusable element\n    if (this.options.autoFocus && this.focusableElements.length > 0) {\n      this.focusableElements[0].focus();\n    }\n\n    // AI-OPTIMIZED: Add keyboard event listener\n    if (this.options.keyboard) {\n      document.addEventListener('keydown', this.handleKeydown);\n    }\n\n    // AI-OPTIMIZED: Trap focus within modal\n    this.trapFocus();\n\n    // AI-OPTIMIZED: Update state\n    this.isOpen = true;\n\n    // AI-OPTIMIZED: Announce to screen readers\n    this.announce('Modal opened');\n\n    // AI-OPTIMIZED: Dispatch custom event\n    this.modal.dispatchEvent(\n      new CustomEvent('modal:opened', { detail: { modal: this } })\n    );\n\n    return this;\n  }\n\n  // IMPORTANT: Close modal with cleanup\n  close() {\n    if (!this.isOpen) return;\n\n    // AI-OPTIMIZED: Hide modal and backdrop\n    if (this.backdrop) {\n      this.backdrop.classList.remove('is-active');\n    }\n    this.modal.classList.remove('is-active');\n\n    // AI-OPTIMIZED: Remove keyboard event listener\n    if (this.options.keyboard) {\n      document.removeEventListener('keydown', this.handleKeydown);\n    }\n\n    // AI-OPTIMIZED: Restore focus\n    if (this.previousFocus && this.previousFocus.focus) {\n      this.previousFocus.focus();\n    }\n\n    // AI-OPTIMIZED: Update state\n    this.isOpen = false;\n\n    // AI-OPTIMIZED: Announce to screen readers\n    this.announce('Modal closed');\n\n    // AI-OPTIMIZED: Dispatch custom event\n    this.modal.dispatchEvent(\n      new CustomEvent('modal:closed', { detail: { modal: this } })\n    );\n\n    // AI-OPTIMIZED: Clean up after animation\n    setTimeout(() => {\n      this.destroy();\n    }, 300);\n\n    return this;\n  }\n\n  // AI-OPTIMIZED: Handle keyboard events\n  handleKeydown(event) {\n    switch (event.key) {\n      case 'Escape':\n        this.close();\n        break;\n      case 'Tab':\n        this.handleTabKey(event);\n        break;\n    }\n  }\n\n  // AI-OPTIMIZED: Handle tab key for focus trapping\n  handleTabKey(event) {\n    const firstElement = this.focusableElements[0];\n    const lastElement =\n      this.focusableElements[this.focusableElements.length - 1];\n\n    if (event.shiftKey) {\n      if (document.activeElement === firstElement) {\n        event.preventDefault();\n        lastElement.focus();\n      }\n    } else {\n      if (document.activeElement === lastElement) {\n        event.preventDefault();\n        firstElement.focus();\n      }\n    }\n  }\n\n  // AI-OPTIMIZED: Handle backdrop click\n  handleBackdropClick(event) {\n    if (event.target === this.backdrop) {\n      this.close();\n    }\n  }\n\n  // AI-OPTIMIZED: Trap focus within modal\n  trapFocus() {\n    const focusableElements = Array.from(this.focusableElements);\n\n    // AI-OPTIMIZED: Ensure at least one element is focusable\n    if (focusableElements.length === 0) {\n      const closeButton = this.modal.querySelector('.modal__close');\n      if (closeButton) {\n        closeButton.focus();\n      }\n      return;\n    }\n\n    // AI-OPTIMIZED: Focus first element if none focused\n    if (!this.modal.contains(document.activeElement)) {\n      focusableElements[0].focus();\n    }\n  }\n\n  // AI-OPTIMIZED: Announce to screen readers\n  announce(message) {\n    const announcement = document.createElement('div');\n    announcement.className = 'sr-only';\n    announcement.setAttribute('aria-live', 'polite');\n    announcement.setAttribute('aria-atomic', 'true');\n    announcement.textContent = message;\n\n    document.body.appendChild(announcement);\n\n    // AI-OPTIMIZED: Remove announcement after screen reader processes it\n    setTimeout(() => {\n      document.body.removeChild(announcement);\n    }, 1000);\n  }\n\n  // AI-OPTIMIZED: Update modal content\n  updateContent(content) {\n    const body = this.modal.querySelector('.modal__body');\n    if (body) {\n      body.innerHTML = content;\n    }\n\n    // AI-OPTIMIZED: Update focusable elements\n    this.focusableElements = this.modal.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    );\n\n    return this;\n  }\n\n  // AI-OPTIMIZED: Add footer with actions\n  addFooter(actions) {\n    const footer = document.createElement('div');\n    footer.className = 'modal__footer';\n    footer.innerHTML = actions;\n\n    this.modal.appendChild(footer);\n\n    // AI-OPTIMIZED: Update focusable elements\n    this.focusableElements = this.modal.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    );\n\n    return this;\n  }\n\n  // AI-OPTIMIZED: Set modal size variant\n  setSize(size) {\n    const sizes = ['small', 'large', 'fullscreen'];\n    if (sizes.includes(size)) {\n      this.modal.className = `modal modal--${size}`;\n    }\n\n    return this;\n  }\n\n  // AI-OPTIMIZED: Clean up modal\n  destroy() {\n    if (this.backdrop && this.backdrop.parentNode) {\n      this.backdrop.parentNode.removeChild(this.backdrop);\n    }\n\n    if (this.modal && this.modal.parentNode) {\n      this.modal.parentNode.removeChild(this.modal);\n    }\n\n    this.modal = null;\n    this.backdrop = null;\n    this.previousFocus = null;\n    this.focusableElements = [];\n    this.isOpen = false;\n  }\n\n  // AI-OPTIMIZED: Static method for quick modal creation\n  static show(content, title = '', options = {}) {\n    const modal = new Modal(options);\n    modal.create(content, title).open();\n    return modal;\n  }\n\n  // AI-OPTIMIZED: Static method for project details modal\n  static showProject(project) {\n    const content = `\n      <img src=\"${project.image}\" alt=\"${project.title}\" class=\"modal__image\">\n      <div class=\"modal__tags\">\n        ${project.tags.map(tag => `<span class=\"modal__tag\">${tag}</span>`).join('')}\n      </div>\n      <p class=\"modal__description\">${project.description}</p>\n      <div class=\"modal__links\">\n        <a href=\"${project.liveUrl}\" class=\"btn btn-primary\" target=\"_blank\" rel=\"noopener\">View Live</a>\n        <a href=\"${project.githubUrl}\" class=\"btn btn-outline\" target=\"_blank\" rel=\"noopener\">View Code</a>\n      </div>\n    `;\n\n    return Modal.show(content, project.title);\n  }\n}\n","// AI-OPTIMIZED: Alert component - User feedback and notifications\nexport class Alert {\n  constructor(options = {}) {\n    // IMPORTANT: Default configuration\n    this.options = {\n      duration: 5000,\n      position: 'top-right',\n      autoDismiss: true,\n      ...options,\n    };\n\n    this.alerts = [];\n    this.toastContainer = null;\n\n    // AI-OPTIMIZED: Initialize toast container\n    this.initToastContainer();\n  }\n\n  // IMPORTANT: Initialize toast container\n  initToastContainer() {\n    this.toastContainer = document.querySelector('.toast-container');\n\n    if (!this.toastContainer) {\n      this.toastContainer = document.createElement('div');\n      this.toastContainer.className = 'toast-container';\n      document.body.appendChild(this.toastContainer);\n    }\n  }\n\n  // AI-OPTIMIZED: Show alert message\n  show(message, type = 'info', options = {}) {\n    const config = { ...this.options, ...options };\n\n    const alert = document.createElement('div');\n    alert.className = `alert alert--${type}`;\n    alert.setAttribute('role', 'alert');\n    alert.setAttribute('aria-live', 'polite');\n\n    // AI-OPTIMIZED: Get icon for alert type\n    const icon = this.getIcon(type);\n\n    alert.innerHTML = `\n      <svg class=\"alert__icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" aria-hidden=\"true\">\n        ${icon}\n      </svg>\n      <div class=\"alert__content\">\n        <p class=\"alert__message\">${message}</p>\n      </div>\n      <button class=\"alert__close\" aria-label=\"Close alert\" type=\"button\">\n        <svg class=\"alert__close-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" aria-hidden=\"true\">\n          <path d=\"M18 6L6 18M6 6l12 12\" />\n        </svg>\n      </button>\n    `;\n\n    // AI-OPTIMIZED: Add close functionality\n    const closeButton = alert.querySelector('.alert__close');\n    closeButton.addEventListener('click', () => this.close(alert));\n\n    // AI-OPTIMIZED: Add to page\n    const container =\n      document.querySelector('.alert-container') || document.body;\n    container.appendChild(alert);\n\n    // AI-OPTIMIZED: Auto-dismiss\n    if (config.autoDismiss && config.duration > 0) {\n      setTimeout(() => this.close(alert), config.duration);\n    }\n\n    // AI-OPTIMIZED: Store reference\n    this.alerts.push(alert);\n\n    // AI-OPTIMIZED: Dispatch custom event\n    alert.dispatchEvent(\n      new CustomEvent('alert:shown', { detail: { alert, type, message } })\n    );\n\n    return alert;\n  }\n\n  // AI-OPTIMIZED: Show toast notification\n  toast(message, type = 'info', options = {}) {\n    const config = { ...this.options, ...options };\n\n    const toast = document.createElement('div');\n    toast.className = `toast toast--${type}`;\n    toast.setAttribute('role', 'alert');\n    toast.setAttribute('aria-live', 'polite');\n\n    // AI-OPTIMIZED: Get icon for toast type\n    const icon = this.getIcon(type);\n\n    toast.innerHTML = `\n      <svg class=\"toast__icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" aria-hidden=\"true\">\n        ${icon}\n      </svg>\n      <div class=\"toast__content\">\n        <p class=\"toast__message\">${message}</p>\n      </div>\n      <button class=\"toast__close\" aria-label=\"Close notification\" type=\"button\">\n        <svg class=\"toast__close-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" aria-hidden=\"true\">\n          <path d=\"M18 6L6 18M6 6l12 12\" />\n        </svg>\n      </button>\n      ${config.autoDismiss ? '<div class=\"toast__progress\"></div>' : ''}\n    `;\n\n    // AI-OPTIMIZED: Add close functionality\n    const closeButton = toast.querySelector('.toast__close');\n    closeButton.addEventListener('click', () => this.closeToast(toast));\n\n    // AI-OPTIMIZED: Add to toast container\n    this.toastContainer.appendChild(toast);\n\n    // AI-OPTIMIZED: Trigger entrance animation\n    requestAnimationFrame(() => {\n      toast.classList.add('is-visible');\n    });\n\n    // AI-OPTIMIZED: Auto-dismiss\n    if (config.autoDismiss && config.duration > 0) {\n      setTimeout(() => this.closeToast(toast), config.duration);\n    }\n\n    // AI-OPTIMIZED: Store reference\n    this.alerts.push(toast);\n\n    // AI-OPTIMIZED: Dispatch custom event\n    toast.dispatchEvent(\n      new CustomEvent('toast:shown', { detail: { toast, type, message } })\n    );\n\n    return toast;\n  }\n\n  // AI-OPTIMIZED: Close alert\n  close(alert) {\n    if (!alert || !alert.parentNode) return;\n\n    // AI-OPTIMIZED: Add exit animation for toasts\n    if (alert.classList.contains('toast')) {\n      alert.classList.add('is-exiting');\n      setTimeout(() => {\n        if (alert.parentNode) {\n          alert.parentNode.removeChild(alert);\n        }\n      }, 300);\n    } else {\n      alert.parentNode.removeChild(alert);\n    }\n\n    // AI-OPTIMIZED: Remove from alerts array\n    const index = this.alerts.indexOf(alert);\n    if (index > -1) {\n      this.alerts.splice(index, 1);\n    }\n\n    // AI-OPTIMIZED: Dispatch custom event\n    alert.dispatchEvent(new CustomEvent('alert:closed', { detail: { alert } }));\n  }\n\n  // AI-OPTIMIZED: Close toast with animation\n  closeToast(toast) {\n    this.close(toast);\n  }\n\n  // AI-OPTIMIZED: Close all alerts\n  closeAll() {\n    this.alerts.forEach(alert => this.close(alert));\n  }\n\n  // AI-OPTIMIZED: Get icon for alert type\n  getIcon(type) {\n    const icons = {\n      success: '<path d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />',\n      error:\n        '<path d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />',\n      warning:\n        '<path d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />',\n      info: '<path d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />',\n    };\n\n    return icons[type] || icons.info;\n  }\n\n  // AI-OPTIMIZED: Success alert\n  success(message, options = {}) {\n    return this.show(message, 'success', options);\n  }\n\n  // AI-OPTIMIZED: Error alert\n  error(message, options = {}) {\n    return this.show(message, 'error', options);\n  }\n\n  // AI-OPTIMIZED: Warning alert\n  warning(message, options = {}) {\n    return this.show(message, 'warning', options);\n  }\n\n  // AI-OPTIMIZED: Info alert\n  info(message, options = {}) {\n    return this.show(message, 'info', options);\n  }\n\n  // AI-OPTIMIZED: Success toast\n  successToast(message, options = {}) {\n    return this.toast(message, 'success', options);\n  }\n\n  // AI-OPTIMIZED: Error toast\n  errorToast(message, options = {}) {\n    return this.toast(message, 'error', options);\n  }\n\n  // AI-OPTIMIZED: Warning toast\n  warningToast(message, options = {}) {\n    return this.toast(message, 'warning', options);\n  }\n\n  // AI-OPTIMIZED: Info toast\n  infoToast(message, options = {}) {\n    return this.toast(message, 'info', options);\n  }\n\n  // AI-OPTIMIZED: Form validation alerts\n  showFormErrors(errors) {\n    Object.keys(errors).forEach(field => {\n      const error = errors[field];\n      this.error(`${field}: ${error}`);\n    });\n  }\n\n  // AI-OPTIMIZED: Form success message\n  showFormSuccess(message = 'Form submitted successfully!') {\n    this.success(message);\n  }\n\n  // AI-OPTIMIZED: Network error handling\n  showNetworkError() {\n    this.error('Network error. Please check your connection and try again.');\n  }\n\n  // AI-OPTIMIZED: Loading state\n  showLoading(message = 'Loading...') {\n    return this.info(message, { autoDismiss: false });\n  }\n\n  // AI-OPTIMIZED: Hide loading\n  hideLoading(alert) {\n    if (alert) {\n      this.close(alert);\n    }\n  }\n}\n","// AI-OPTIMIZED: Loading component - Loading states and indicators\nexport class Loading {\n  constructor(options = {}) {\n    // IMPORTANT: Default configuration\n    this.options = {\n      duration: 2000,\n      showSpinner: true,\n      showText: true,\n      ...options,\n    };\n\n    this.loadingStates = new Map();\n    this.overlay = null;\n  }\n\n  // IMPORTANT: Show loading overlay\n  showOverlay(text = 'Loading...', options = {}) {\n    const config = { ...this.options, ...options };\n\n    // AI-OPTIMIZED: Create overlay if it doesn't exist\n    if (!this.overlay) {\n      this.overlay = document.createElement('div');\n      this.overlay.className = 'loading-overlay';\n      this.overlay.setAttribute('role', 'status');\n      this.overlay.setAttribute('aria-live', 'polite');\n      document.body.appendChild(this.overlay);\n    }\n\n    // AI-OPTIMIZED: Update overlay content\n    this.overlay.innerHTML = `\n      <div class=\"loading-overlay__content\">\n        ${config.showSpinner ? '<div class=\"loading-overlay__spinner\"><div class=\"spinner spinner--xl\"></div></div>' : ''}\n        ${config.showText ? `<p class=\"loading-overlay__text\">${text}</p>` : ''}\n      </div>\n    `;\n\n    // AI-OPTIMIZED: Show overlay\n    this.overlay.classList.add('is-active');\n\n    // AI-OPTIMIZED: Announce to screen readers\n    this.announce(text);\n\n    // AI-OPTIMIZED: Dispatch custom event\n    this.overlay.dispatchEvent(\n      new CustomEvent('loading:overlay:shown', {\n        detail: { text, options: config },\n      })\n    );\n\n    return this.overlay;\n  }\n\n  // AI-OPTIMIZED: Hide loading overlay\n  hideOverlay() {\n    if (this.overlay) {\n      this.overlay.classList.remove('is-active');\n\n      // AI-OPTIMIZED: Dispatch custom event\n      this.overlay.dispatchEvent(new CustomEvent('loading:overlay:hidden'));\n    }\n  }\n\n  // AI-OPTIMIZED: Show loading state for element\n  showElement(element, options = {}) {\n    const config = { ...this.options, ...options };\n    const elementId = element.id || `element-${Date.now()}`;\n\n    // AI-OPTIMIZED: Store original content\n    const originalContent = element.innerHTML;\n    const originalClasses = element.className;\n\n    // AI-OPTIMIZED: Add loading state\n    element.classList.add('is-loading');\n\n    // AI-OPTIMIZED: Create skeleton content\n    const skeletonContent = this.createSkeletonContent(element, config);\n    element.innerHTML = skeletonContent;\n\n    // AI-OPTIMIZED: Store loading state\n    this.loadingStates.set(elementId, {\n      element,\n      originalContent,\n      originalClasses,\n      config,\n    });\n\n    // AI-OPTIMIZED: Dispatch custom event\n    element.dispatchEvent(\n      new CustomEvent('loading:element:shown', {\n        detail: { element, options: config },\n      })\n    );\n\n    return elementId;\n  }\n\n  // AI-OPTIMIZED: Hide loading state for element\n  hideElement(elementId) {\n    const loadingState = this.loadingStates.get(elementId);\n\n    if (loadingState) {\n      const { element, originalContent, originalClasses } = loadingState;\n\n      // AI-OPTIMIZED: Restore original content\n      element.innerHTML = originalContent;\n      element.className = originalClasses;\n\n      // AI-OPTIMIZED: Remove loading state\n      this.loadingStates.delete(elementId);\n\n      // AI-OPTIMIZED: Dispatch custom event\n      element.dispatchEvent(\n        new CustomEvent('loading:element:hidden', { detail: { element } })\n      );\n    }\n  }\n\n  // AI-OPTIMIZED: Create skeleton content based on element type\n  createSkeletonContent(element, config) {\n    const tagName = element.tagName.toLowerCase();\n    const classes = element.className;\n\n    // AI-OPTIMIZED: Determine skeleton type based on element\n    if (classes.includes('project-card')) {\n      return this.createProjectCardSkeleton();\n    } else if (classes.includes('btn')) {\n      return this.createButtonSkeleton();\n    } else if (tagName === 'img') {\n      return this.createImageSkeleton();\n    } else if (tagName === 'table') {\n      return this.createTableSkeleton();\n    } else {\n      return this.createGenericSkeleton();\n    }\n  }\n\n  // AI-OPTIMIZED: Create project card skeleton\n  createProjectCardSkeleton() {\n    return `\n      <div class=\"skeleton skeleton--image\"></div>\n      <div class=\"skeleton skeleton--text skeleton--text--short\"></div>\n      <div class=\"skeleton skeleton--text skeleton--text--medium\"></div>\n      <div class=\"skeleton skeleton--button\"></div>\n    `;\n  }\n\n  // AI-OPTIMIZED: Create button skeleton\n  createButtonSkeleton() {\n    return `<div class=\"skeleton skeleton--button\"></div>`;\n  }\n\n  // AI-OPTIMIZED: Create image skeleton\n  createImageSkeleton() {\n    return `<div class=\"skeleton skeleton--image\"></div>`;\n  }\n\n  // AI-OPTIMIZED: Create table skeleton\n  createTableSkeleton() {\n    return `\n      <div class=\"skeleton skeleton--text skeleton--text--long\"></div>\n      <div class=\"skeleton skeleton--text skeleton--text--medium\"></div>\n      <div class=\"skeleton skeleton--text skeleton--text--long\"></div>\n      <div class=\"skeleton skeleton--text skeleton--text--medium\"></div>\n    `;\n  }\n\n  // AI-OPTIMIZED: Create generic skeleton\n  createGenericSkeleton() {\n    return `\n      <div class=\"skeleton skeleton--text skeleton--text--short\"></div>\n      <div class=\"skeleton skeleton--text skeleton--text--medium\"></div>\n      <div class=\"skeleton skeleton--text skeleton--text--long\"></div>\n    `;\n  }\n\n  // AI-OPTIMIZED: Show loading state for button\n  showButtonLoading(button, text = 'Loading...') {\n    const originalText = button.textContent;\n    const originalDisabled = button.disabled;\n\n    // AI-OPTIMIZED: Add loading state\n    button.classList.add('btn--loading');\n    button.disabled = true;\n    button.textContent = text;\n\n    // AI-OPTIMIZED: Store original state\n    const buttonId = button.id || `button-${Date.now()}`;\n    this.loadingStates.set(buttonId, {\n      element: button,\n      originalText,\n      originalDisabled,\n      type: 'button',\n    });\n\n    return buttonId;\n  }\n\n  // AI-OPTIMIZED: Hide loading state for button\n  hideButtonLoading(buttonId) {\n    const loadingState = this.loadingStates.get(buttonId);\n\n    if (loadingState && loadingState.type === 'button') {\n      const { element, originalText, originalDisabled } = loadingState;\n\n      // AI-OPTIMIZED: Restore original state\n      element.classList.remove('btn--loading');\n      element.disabled = originalDisabled;\n      element.textContent = originalText;\n\n      // AI-OPTIMIZED: Remove loading state\n      this.loadingStates.delete(buttonId);\n    }\n  }\n\n  // AI-OPTIMIZED: Show loading state for form\n  showFormLoading(form, options = {}) {\n    const config = { ...this.options, ...options };\n\n    // AI-OPTIMIZED: Add loading state\n    form.classList.add('form--loading');\n\n    // AI-OPTIMIZED: Create spinner\n    if (config.showSpinner) {\n      const spinner = document.createElement('div');\n      spinner.className = 'spinner';\n      spinner.setAttribute('aria-hidden', 'true');\n      form.appendChild(spinner);\n    }\n\n    // AI-OPTIMIZED: Disable form inputs\n    const inputs = form.querySelectorAll('input, textarea, select, button');\n    inputs.forEach(input => {\n      input.disabled = true;\n    });\n\n    // AI-OPTIMIZED: Store form state\n    const formId = form.id || `form-${Date.now()}`;\n    this.loadingStates.set(formId, {\n      element: form,\n      type: 'form',\n      inputs: Array.from(inputs),\n    });\n\n    return formId;\n  }\n\n  // AI-OPTIMIZED: Hide loading state for form\n  hideFormLoading(formId) {\n    const loadingState = this.loadingStates.get(formId);\n\n    if (loadingState && loadingState.type === 'form') {\n      const { element, inputs } = loadingState;\n\n      // AI-OPTIMIZED: Remove loading state\n      element.classList.remove('form--loading');\n\n      // AI-OPTIMIZED: Remove spinner\n      const spinner = element.querySelector('.spinner');\n      if (spinner) {\n        spinner.remove();\n      }\n\n      // AI-OPTIMIZED: Re-enable form inputs\n      inputs.forEach(input => {\n        input.disabled = false;\n      });\n\n      // AI-OPTIMIZED: Remove loading state\n      this.loadingStates.delete(formId);\n    }\n  }\n\n  // AI-OPTIMIZED: Create progress bar\n  createProgressBar(container, options = {}) {\n    const config = {\n      value: 0,\n      max: 100,\n      animated: true,\n      ...options,\n    };\n\n    const progress = document.createElement('div');\n    progress.className = 'progress';\n\n    const progressBar = document.createElement('div');\n    progressBar.className = `progress__bar ${config.animated ? 'progress__bar--animated' : ''}`;\n    progressBar.setAttribute('role', 'progressbar');\n    progressBar.setAttribute('aria-valuenow', config.value);\n    progressBar.setAttribute('aria-valuemin', '0');\n    progressBar.setAttribute('aria-valuemax', config.max);\n    progressBar.style.width = `${(config.value / config.max) * 100}%`;\n\n    progress.appendChild(progressBar);\n    container.appendChild(progress);\n\n    return {\n      element: progress,\n      bar: progressBar,\n      update: value => this.updateProgress(progressBar, value, config.max),\n      destroy: () => progress.remove(),\n    };\n  }\n\n  // AI-OPTIMIZED: Update progress bar\n  updateProgress(progressBar, value, max) {\n    const percentage = Math.min(Math.max((value / max) * 100, 0), 100);\n    progressBar.style.width = `${percentage}%`;\n    progressBar.setAttribute('aria-valuenow', value);\n  }\n\n  // AI-OPTIMIZED: Create spinner\n  createSpinner(container, size = 'medium', options = {}) {\n    const config = { ...this.options, ...options };\n\n    const spinner = document.createElement('div');\n    spinner.className = `spinner spinner--${size}`;\n    spinner.setAttribute('role', 'status');\n    spinner.setAttribute('aria-label', 'Loading');\n\n    if (config.showText) {\n      const text = document.createElement('span');\n      text.className = 'sr-only';\n      text.textContent = 'Loading...';\n      spinner.appendChild(text);\n    }\n\n    container.appendChild(spinner);\n\n    return {\n      element: spinner,\n      destroy: () => spinner.remove(),\n    };\n  }\n\n  // AI-OPTIMIZED: Create dots spinner\n  createDotsSpinner(container, options = {}) {\n    const config = { ...this.options, ...options };\n\n    const dotsSpinner = document.createElement('div');\n    dotsSpinner.className = 'spinner-dots';\n    dotsSpinner.setAttribute('role', 'status');\n    dotsSpinner.setAttribute('aria-label', 'Loading');\n\n    // AI-OPTIMIZED: Create dots\n    for (let i = 0; i < 3; i++) {\n      const dot = document.createElement('div');\n      dot.className = 'spinner-dots__dot';\n      dotsSpinner.appendChild(dot);\n    }\n\n    if (config.showText) {\n      const text = document.createElement('span');\n      text.className = 'sr-only';\n      text.textContent = 'Loading...';\n      dotsSpinner.appendChild(text);\n    }\n\n    container.appendChild(dotsSpinner);\n\n    return {\n      element: dotsSpinner,\n      destroy: () => dotsSpinner.remove(),\n    };\n  }\n\n  // AI-OPTIMIZED: Announce to screen readers\n  announce(message) {\n    const announcement = document.createElement('div');\n    announcement.className = 'loading-announcement';\n    announcement.setAttribute('aria-live', 'polite');\n    announcement.setAttribute('aria-atomic', 'true');\n    announcement.textContent = message;\n\n    document.body.appendChild(announcement);\n\n    // AI-OPTIMIZED: Remove announcement after screen reader processes it\n    setTimeout(() => {\n      if (announcement.parentNode) {\n        announcement.parentNode.removeChild(announcement);\n      }\n    }, 1000);\n  }\n\n  // AI-OPTIMIZED: Hide all loading states\n  hideAll() {\n    this.hideOverlay();\n    this.loadingStates.forEach((state, id) => {\n      if (state.type === 'button') {\n        this.hideButtonLoading(id);\n      } else if (state.type === 'form') {\n        this.hideFormLoading(id);\n      } else {\n        this.hideElement(id);\n      }\n    });\n  }\n\n  // AI-OPTIMIZED: Check if any loading state is active\n  isLoading() {\n    return (\n      this.loadingStates.size > 0 ||\n      (this.overlay && this.overlay.classList.contains('is-active'))\n    );\n  }\n\n  // AI-OPTIMIZED: Get loading state count\n  getLoadingCount() {\n    return this.loadingStates.size;\n  }\n}\n","// AI-OPTIMIZED: Main JavaScript file - Core functionality and initialization\nimport { Navigation } from './navigation.js';\nimport { Modal } from './components/modal.js';\nimport { Alert } from './components/alert.js';\nimport { Loading } from './components/loading.js';\nimport JustValidate from 'just-validate';\n\n// IMPORTANT: Core initialization - runs when DOM is ready\ndocument.addEventListener('DOMContentLoaded', () => {\n  // THEME TOGGLE: Use icon in navbar\n  const themeToggle = document.getElementById('theme-toggle');\n  const themeIcon = themeToggle?.querySelector('.theme-toggle__icon');\n\n  function setThemeIcon() {\n    const isDark = document.documentElement.getAttribute('data-theme') === 'dark';\n    if (themeIcon) {\n      themeIcon.innerHTML = isDark\n        ? `<svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M21 12.79A9 9 0 1 1 11.21 3a7 7 0 1 0 9.79 9.79z\"/></svg>`\n        : `<svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"5\"/><path d=\"M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42\"/></svg>`;\n    }\n  }\n\n  if (themeToggle) {\n    setThemeIcon();\n    themeToggle.addEventListener('click', () => {\n      // Save menu open state\n      const wasMenuOpen = window.app?.navigation?.isMenuOpen;\n      if (document.documentElement.getAttribute('data-theme') === 'dark') {\n        document.documentElement.removeAttribute('data-theme');\n      } else {\n        document.documentElement.setAttribute('data-theme', 'dark');\n      }\n      setThemeIcon();\n      // Restore menu open state if it was open\n      if (wasMenuOpen && window.app?.navigation?.mobileMenu && window.app?.navigation?.mobileMenuButton) {\n        window.app.navigation.isMenuOpen = true;\n        window.app.navigation.mobileMenu.classList.add('active');\n        window.app.navigation.mobileMenuButton.setAttribute('aria-expanded', 'true');\n        document.body.style.overflow = 'hidden';\n      }\n    });\n  }\n\n  // AI-OPTIMIZED: Initialize navigation\n  const navigation = new Navigation();\n\n  // AI-OPTIMIZED: Initialize secondary components\n  const modal = new Modal();\n  const alert = new Alert();\n  const loading = new Loading();\n\n  // AI-OPTIMIZED: Make components globally available for debugging\n  window.app = {\n    modal,\n    alert,\n    loading,\n    navigation,\n  };\n\n  // AI-OPTIMIZED: Initialize lazy loading for performance\n  const lazyLoadInstance = lozad('.lazy', {\n    rootMargin: '50px 0px',\n    threshold: 0.1,\n    loaded: function (el) {\n      el.classList.add('loaded');\n    },\n  });\n  lazyLoadInstance.observe();\n\n  // AI-OPTIMIZED: Initialize project filtering with Isotope\n  const grid = document.querySelector('.projects__grid');\n  if (grid) {\n    const iso = new Isotope(grid, {\n      itemSelector: '.project-card',\n      layoutMode: 'fitRows',\n      transitionDuration: '0.4s',\n    });\n\n    // AI-OPTIMIZED: Filter items on button click\n    const filterButtons = document.querySelectorAll('.filter__btn');\n    filterButtons.forEach(button => {\n      button.addEventListener('click', () => {\n        const filterValue = button.getAttribute('data-filter');\n        iso.arrange({ filter: filterValue });\n\n        // Update active state\n        filterButtons.forEach(btn => btn.classList.remove('active'));\n        button.classList.add('active');\n      });\n    });\n  }\n\n  // IMPORTANT: Initialize form validation for user input security\n  const forms = document.querySelectorAll('form');\n  forms.forEach(form => {\n    const validator = new JustValidate(form, {\n      validateBeforeSubmitting: true,\n      lockForm: true,\n      focusInvalidField: true,\n      errorFieldCssClass: 'is-invalid',\n      successFieldCssClass: 'is-valid',\n    });\n\n    // AI-OPTIMIZED: Add validation rules\n    validator\n      .addField('[name=\"name\"]', [\n        { rule: 'required', errorMessage: 'Name is required' },\n        {\n          rule: 'minLength',\n          value: 2,\n          errorMessage: 'Name must be at least 2 characters',\n        },\n      ])\n      .addField('[name=\"email\"]', [\n        { rule: 'required', errorMessage: 'Email is required' },\n        { rule: 'email', errorMessage: 'Please enter a valid email' },\n      ])\n      .addField('[name=\"message\"]', [\n        { rule: 'required', errorMessage: 'Message is required' },\n        {\n          rule: 'minLength',\n          value: 10,\n          errorMessage: 'Message must be at least 10 characters',\n        },\n      ]);\n\n    // AI-OPTIMIZED: Handle form submission with loading states\n    form.addEventListener('submit', async e => {\n      e.preventDefault();\n\n      if (validator.isValid) {\n        const formId = loading.showFormLoading(form);\n\n        try {\n          // AI-OPTIMIZED: Simulate form submission (replace with actual API call)\n          await new Promise(resolve => setTimeout(resolve, 2000));\n\n          // AI-OPTIMIZED: Show success message\n          alert.showFormSuccess();\n          form.reset();\n        } catch (error) {\n          // AI-OPTIMIZED: Show error message\n          alert.showNetworkError();\n        } finally {\n          // AI-OPTIMIZED: Hide loading state\n          loading.hideFormLoading(formId);\n        }\n      } else {\n        // AI-OPTIMIZED: Show validation errors\n        const errors = validator.getErrors();\n        alert.showFormErrors(errors);\n      }\n    });\n  });\n\n  // AI-OPTIMIZED: Initialize project card modals\n  const projectCards = document.querySelectorAll('.project-card');\n  projectCards.forEach(card => {\n    const viewButton = card.querySelector('.btn');\n    if (viewButton) {\n      viewButton.addEventListener('click', e => {\n        e.preventDefault();\n\n        // AI-OPTIMIZED: Get project data from card\n        const title = card.querySelector('.project-card__title').textContent;\n        const description = card.querySelector(\n          '.project-card__description'\n        ).textContent;\n        const image = card.querySelector('.project-card__image').src;\n        const tags = Array.from(\n          card.querySelectorAll('.project-card__tag')\n        ).map(tag => tag.textContent);\n\n        // AI-OPTIMIZED: Create project object\n        const project = {\n          title,\n          description,\n          image,\n          tags,\n          liveUrl: '#',\n          githubUrl: '#',\n        };\n\n        // AI-OPTIMIZED: Show project modal\n        Modal.showProject(project);\n      });\n    }\n  });\n\n  // AI-OPTIMIZED: Initialize animations (respects reduced motion preference)\n  gsap.from('.hero__title', {\n    duration: 1,\n    y: 50,\n    opacity: 0,\n    ease: 'power3.out',\n  });\n\n  gsap.from('.hero__subtitle', {\n    duration: 1,\n    y: 30,\n    opacity: 0,\n    ease: 'power3.out',\n    delay: 0.2,\n  });\n\n  gsap.from('.hero__cta', {\n    duration: 1,\n    y: 20,\n    opacity: 0,\n    ease: 'power3.out',\n    delay: 0.4,\n  });\n\n  // AI-OPTIMIZED: Initialize loading states for images\n  const images = document.querySelectorAll('img[data-src]');\n  images.forEach(img => {\n    img.classList.add('image--loading');\n\n    img.addEventListener('load', () => {\n      img.classList.remove('image--loading');\n    });\n\n    img.addEventListener('error', () => {\n      img.classList.remove('image--loading');\n      img.src = 'assets/images/placeholder.jpg';\n    });\n  });\n});\n\n// TODO: Add error handling for external library dependencies\n// TODO: Implement performance monitoring for animations\n// TODO: Add accessibility enhancements for form validation\n"],"names":["Navigation","constructor","this","mobileMenuButton","document","querySelector","mobileMenu","navLinks","querySelectorAll","isMenuOpen","init","err","observeThemeChange","addEventListener","toggleMenu","e","themeToggle","getElementById","target","closest","contains","closeMenu","forEach","link","href","getAttribute","startsWith","preventDefault","scrollToSection","updateActiveLink","window","setAttribute","classList","toggle","body","style","overflow","remove","sectionId","section","headerOffset","offsetPosition","getBoundingClientRect","top","pageYOffset","scrollTo","behavior","sections","scrollPosition","sectionTop","offsetTop","sectionHeight","offsetHeight","add","MutationObserver","offsetWidth","observe","documentElement","attributes","attributeFilter","Modal","options","backdrop","keyboard","focus","autoFocus","modal","previousFocus","focusableElements","isOpen","handleKeydown","bind","handleBackdropClick","close","create","content","title","createElement","className","modalId","Date","now","id","innerHTML","appendChild","open","activeElement","length","trapFocus","announce","dispatchEvent","CustomEvent","detail","removeEventListener","setTimeout","destroy","event","key","handleTabKey","firstElement","lastElement","shiftKey","Array","from","closeButton","message","announcement","textContent","removeChild","updateContent","addFooter","actions","footer","setSize","size","includes","parentNode","show","showProject","project","image","tags","map","tag","join","description","liveUrl","githubUrl","Alert","duration","position","autoDismiss","alerts","toastContainer","initToastContainer","type","config","alert","icon","getIcon","push","toast","closeToast","requestAnimationFrame","index","indexOf","splice","closeAll","icons","success","error","warning","info","successToast","errorToast","warningToast","infoToast","showFormErrors","errors","Object","keys","field","showFormSuccess","showNetworkError","showLoading","hideLoading","Loading","showSpinner","showText","loadingStates","Map","overlay","showOverlay","text","hideOverlay","showElement","element","elementId","originalContent","originalClasses","skeletonContent","createSkeletonContent","set","hideElement","loadingState","get","delete","tagName","toLowerCase","classes","createProjectCardSkeleton","createButtonSkeleton","createImageSkeleton","createTableSkeleton","createGenericSkeleton","showButtonLoading","button","originalText","originalDisabled","disabled","buttonId","hideButtonLoading","showFormLoading","form","spinner","inputs","input","formId","hideFormLoading","createProgressBar","container","value","max","animated","progress","progressBar","width","bar","update","updateProgress","percentage","Math","min","createSpinner","createDotsSpinner","dotsSpinner","i","dot","hideAll","state","isLoading","getLoadingCount","themeIcon","setThemeIcon","isDark","wasMenuOpen","_b","_a","app","navigation","removeAttribute","_d","_c","_f","_e","loading","lozad","rootMargin","threshold","loaded","el","grid","iso","Isotope","itemSelector","layoutMode","transitionDuration","filterButtons","filterValue","arrange","filter","btn","validator","JustValidate","validateBeforeSubmitting","lockForm","focusInvalidField","errorFieldCssClass","successFieldCssClass","addField","rule","errorMessage","async","isValid","Promise","resolve","reset","getErrors","card","viewButton","src","gsap","y","opacity","ease","delay","img"],"mappings":"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"}
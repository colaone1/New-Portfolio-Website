{"version":3,"file":"vendor-Dv0aVFco.js","sources":["../../node_modules/just-validate/dist/just-validate.es.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nconst EMAIL_REGEXP = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst INTEGER_REGEXP = /^-?[0-9]\\d*$/;\nconst PASSWORD_REGEXP = /^(?=.*[A-Za-z])(?=.*\\d).{8,}$/;\nconst STRONG_PASSWORD_REGEXP = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\nconst isEmpty = (value) => {\n  let newVal = value;\n  if (typeof value === \"string\") {\n    newVal = value.trim();\n  }\n  return !newVal;\n};\nconst isEmail = (value) => {\n  return EMAIL_REGEXP.test(value);\n};\nconst isLengthMoreThanMax = (value, len) => {\n  return value.length > len;\n};\nconst isLengthLessThanMin = (value, len) => {\n  return value.length < len;\n};\nconst isNumber = (value) => {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  return !isNaN(+value) && !isNaN(parseFloat(value));\n};\nconst isInteger = (value) => {\n  return INTEGER_REGEXP.test(value);\n};\nconst isPassword = (value) => {\n  return PASSWORD_REGEXP.test(value);\n};\nconst isStrongPassword = (value) => {\n  return STRONG_PASSWORD_REGEXP.test(value);\n};\nconst isNumberMoreThanMax = (value, len) => {\n  return value > len;\n};\nconst isNumberLessThanMin = (value, len) => {\n  return value < len;\n};\nconst isInvalidOrEmptyString = (value) => {\n  return typeof value !== \"string\" || value === \"\";\n};\nvar Rules = /* @__PURE__ */ ((Rules2) => {\n  Rules2[\"Required\"] = \"required\";\n  Rules2[\"Email\"] = \"email\";\n  Rules2[\"MinLength\"] = \"minLength\";\n  Rules2[\"MaxLength\"] = \"maxLength\";\n  Rules2[\"Password\"] = \"password\";\n  Rules2[\"Number\"] = \"number\";\n  Rules2[\"Integer\"] = \"integer\";\n  Rules2[\"MaxNumber\"] = \"maxNumber\";\n  Rules2[\"MinNumber\"] = \"minNumber\";\n  Rules2[\"StrongPassword\"] = \"strongPassword\";\n  Rules2[\"CustomRegexp\"] = \"customRegexp\";\n  Rules2[\"MinFilesCount\"] = \"minFilesCount\";\n  Rules2[\"MaxFilesCount\"] = \"maxFilesCount\";\n  Rules2[\"Files\"] = \"files\";\n  return Rules2;\n})(Rules || {});\nvar GroupRules = /* @__PURE__ */ ((GroupRules2) => {\n  GroupRules2[\"Required\"] = \"required\";\n  return GroupRules2;\n})(GroupRules || {});\nvar CustomStyleTagIds = /* @__PURE__ */ ((CustomStyleTagIds2) => {\n  CustomStyleTagIds2[\"Label\"] = \"label\";\n  CustomStyleTagIds2[\"LabelArrow\"] = \"labelArrow\";\n  return CustomStyleTagIds2;\n})(CustomStyleTagIds || {});\nconst defaultDictionary = [\n  {\n    key: Rules.Required,\n    dict: {\n      en: \"The field is required\"\n    }\n  },\n  {\n    key: Rules.Email,\n    dict: {\n      en: \"Email has invalid format\"\n    }\n  },\n  {\n    key: Rules.MaxLength,\n    dict: {\n      en: \"The field must contain a maximum of :value characters\"\n    }\n  },\n  {\n    key: Rules.MinLength,\n    dict: {\n      en: \"The field must contain a minimum of :value characters\"\n    }\n  },\n  {\n    key: Rules.Password,\n    dict: {\n      en: \"Password must contain minimum eight characters, at least one letter and one number\"\n    }\n  },\n  {\n    key: Rules.StrongPassword,\n    dict: {\n      en: \"Password should contain minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\"\n    }\n  },\n  {\n    key: Rules.Number,\n    dict: {\n      en: \"Value should be a number\"\n    }\n  },\n  {\n    key: Rules.MaxNumber,\n    dict: {\n      en: \"Number should be less or equal than :value\"\n    }\n  },\n  {\n    key: Rules.MinNumber,\n    dict: {\n      en: \"Number should be more or equal than :value\"\n    }\n  },\n  {\n    key: Rules.MinFilesCount,\n    dict: {\n      en: \"Files count should be more or equal than :value\"\n    }\n  },\n  {\n    key: Rules.MaxFilesCount,\n    dict: {\n      en: \"Files count should be less or equal than :value\"\n    }\n  },\n  {\n    key: Rules.Files,\n    dict: {\n      en: \"Uploaded files have one or several invalid properties (extension/size/type etc).\"\n    }\n  }\n];\nconst DEFAULT_ERROR_FIELD_MESSAGE = \"Value is incorrect\";\nconst isPromise = (val) => typeof val === \"object\" && val !== null && \"then\" in val && typeof val.then === \"function\";\nconst getNodeParents = (el) => {\n  let elem = el;\n  const els = [];\n  while (elem) {\n    els.unshift(elem);\n    elem = elem.parentNode;\n  }\n  return els;\n};\nconst getClosestParent = (groups, parents) => {\n  const reversedParents = [...parents].reverse();\n  for (let i = 0, len = reversedParents.length; i < len; ++i) {\n    const parent = reversedParents[i];\n    for (const key in groups) {\n      const group = groups[key];\n      if (group.groupElem === parent) {\n        return [key, group];\n      }\n    }\n  }\n  return null;\n};\nconst getClassList = (classList) => {\n  if (Array.isArray(classList)) {\n    return classList.filter((cls) => cls.length > 0);\n  }\n  if (typeof classList === \"string\" && classList.trim()) {\n    return [...classList.split(\" \").filter((cls) => cls.length > 0)];\n  }\n  return [];\n};\nconst isElement = (element) => {\n  return element instanceof Element || element instanceof HTMLDocument;\n};\nconst errorLabelCss = `.just-validate-error-label[data-tooltip=true]{position:fixed;padding:4px 8px;background:#423f3f;color:#fff;white-space:nowrap;z-index:10;border-radius:4px;transform:translateY(-5px)}.just-validate-error-label[data-tooltip=true]:before{content:'';width:0;height:0;border-left:solid 5px transparent;border-right:solid 5px transparent;border-bottom:solid 5px #423f3f;position:absolute;z-index:3;display:block;bottom:-5px;transform:rotate(180deg);left:calc(50% - 5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]{transform:translateX(-5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]:before{right:-7px;bottom:auto;left:auto;top:calc(50% - 2px);transform:rotate(90deg)}.just-validate-error-label[data-tooltip=true][data-direction=right]{transform:translateX(5px)}.just-validate-error-label[data-tooltip=true][data-direction=right]:before{right:auto;bottom:auto;left:-7px;top:calc(50% - 2px);transform:rotate(-90deg)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]{transform:translateY(5px)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]:before{right:auto;bottom:auto;left:calc(50% - 5px);top:-5px;transform:rotate(0)}`;\nconst TOOLTIP_ARROW_HEIGHT = 5;\nconst defaultGlobalConfig = {\n  errorFieldStyle: {\n    color: \"#b81111\",\n    border: \"1px solid #B81111\"\n  },\n  errorFieldCssClass: \"just-validate-error-field\",\n  successFieldCssClass: \"just-validate-success-field\",\n  errorLabelStyle: {\n    color: \"#b81111\"\n  },\n  errorLabelCssClass: \"just-validate-error-label\",\n  successLabelCssClass: \"just-validate-success-label\",\n  focusInvalidField: true,\n  lockForm: true,\n  testingMode: false,\n  validateBeforeSubmitting: false,\n  submitFormAutomatically: false\n};\nclass JustValidate {\n  constructor(form, globalConfig, dictLocale) {\n    __publicField(this, \"form\", null);\n    __publicField(this, \"fields\", {});\n    __publicField(this, \"groupFields\", {});\n    __publicField(this, \"errors\", {});\n    __publicField(this, \"isValid\", false);\n    __publicField(this, \"isSubmitted\", false);\n    __publicField(this, \"globalConfig\", defaultGlobalConfig);\n    __publicField(this, \"errorLabels\", {});\n    __publicField(this, \"successLabels\", {});\n    __publicField(this, \"eventListeners\", []);\n    __publicField(this, \"dictLocale\", defaultDictionary);\n    __publicField(this, \"currentLocale\", \"en\");\n    __publicField(this, \"customStyleTags\", {});\n    __publicField(this, \"onSuccessCallback\");\n    __publicField(this, \"onFailCallback\");\n    __publicField(this, \"onValidateCallback\");\n    __publicField(this, \"tooltips\", []);\n    __publicField(this, \"lastScrollPosition\");\n    __publicField(this, \"isScrollTick\");\n    __publicField(this, \"fieldIds\", /* @__PURE__ */ new Map());\n    __publicField(this, \"getKeyByFieldSelector\", (field) => {\n      return this.fieldIds.get(field);\n    });\n    __publicField(this, \"getFieldSelectorByKey\", (key) => {\n      for (const [fieldSelector, k] of this.fieldIds) {\n        if (key === k) {\n          return fieldSelector;\n        }\n      }\n      return void 0;\n    });\n    __publicField(this, \"getCompatibleFields\", () => {\n      const fields = {};\n      Object.keys(this.fields).forEach((key) => {\n        let newKey = key;\n        const fieldSelector = this.getFieldSelectorByKey(key);\n        if (typeof fieldSelector === \"string\") {\n          newKey = fieldSelector;\n        }\n        fields[newKey] = { ...this.fields[key] };\n      });\n      return fields;\n    });\n    __publicField(this, \"setKeyByFieldSelector\", (field) => {\n      if (this.fieldIds.has(field)) {\n        return this.fieldIds.get(field);\n      }\n      const key = String(this.fieldIds.size + 1);\n      this.fieldIds.set(field, key);\n      return key;\n    });\n    __publicField(this, \"refreshAllTooltips\", () => {\n      this.tooltips.forEach((item) => {\n        item.refresh();\n      });\n    });\n    __publicField(this, \"handleDocumentScroll\", () => {\n      this.lastScrollPosition = window.scrollY;\n      if (!this.isScrollTick) {\n        window.requestAnimationFrame(() => {\n          this.refreshAllTooltips();\n          this.isScrollTick = false;\n        });\n        this.isScrollTick = true;\n      }\n    });\n    __publicField(this, \"formSubmitHandler\", (ev) => {\n      ev.preventDefault();\n      this.isSubmitted = true;\n      this.validateHandler(ev);\n    });\n    __publicField(this, \"handleFieldChange\", (target) => {\n      let foundKey;\n      for (const key in this.fields) {\n        const field = this.fields[key];\n        if (field.elem === target) {\n          foundKey = key;\n          break;\n        }\n      }\n      if (!foundKey) {\n        return;\n      }\n      this.fields[foundKey].touched = true;\n      this.validateField(foundKey, true);\n    });\n    __publicField(this, \"handleGroupChange\", (target) => {\n      let foundKey;\n      for (const key in this.groupFields) {\n        const group = this.groupFields[key];\n        if (group.elems.find((elem) => elem === target)) {\n          foundKey = key;\n          break;\n        }\n      }\n      if (!foundKey) {\n        return;\n      }\n      this.groupFields[foundKey].touched = true;\n      this.validateGroup(foundKey, true);\n    });\n    __publicField(this, \"handlerChange\", (ev) => {\n      if (!ev.target) {\n        return;\n      }\n      this.handleFieldChange(ev.target);\n      this.handleGroupChange(ev.target);\n      this.renderErrors();\n    });\n    this.initialize(form, globalConfig, dictLocale);\n  }\n  initialize(form, globalConfig, dictLocale) {\n    this.form = null;\n    this.errors = {};\n    this.isValid = false;\n    this.isSubmitted = false;\n    this.globalConfig = defaultGlobalConfig;\n    this.errorLabels = {};\n    this.successLabels = {};\n    this.eventListeners = [];\n    this.customStyleTags = {};\n    this.tooltips = [];\n    this.currentLocale = \"en\";\n    if (typeof form === \"string\") {\n      const elem = document.querySelector(form);\n      if (!elem) {\n        throw Error(\n          `Form with ${form} selector not found! Please check the form selector`\n        );\n      }\n      this.setForm(elem);\n    } else if (form instanceof HTMLFormElement) {\n      this.setForm(form);\n    } else {\n      throw Error(\n        `Form selector is not valid. Please specify a string selector or a DOM element.`\n      );\n    }\n    this.globalConfig = { ...defaultGlobalConfig, ...globalConfig };\n    if (dictLocale) {\n      this.dictLocale = [...dictLocale, ...defaultDictionary];\n    }\n    if (this.isTooltip()) {\n      const styleTag = document.createElement(\"style\");\n      styleTag.textContent = errorLabelCss;\n      this.customStyleTags[CustomStyleTagIds.Label] = document.head.appendChild(styleTag);\n      this.addListener(\"scroll\", document, this.handleDocumentScroll);\n    }\n  }\n  getLocalisedString(rule, ruleValue, customMsg) {\n    var _a;\n    const search = customMsg != null ? customMsg : rule;\n    let localisedStr = (_a = this.dictLocale.find((item) => item.key === search)) == null ? void 0 : _a.dict[this.currentLocale];\n    if (!localisedStr) {\n      if (customMsg) {\n        localisedStr = customMsg;\n      }\n    }\n    if (localisedStr && ruleValue !== void 0) {\n      switch (rule) {\n        case Rules.MaxLength:\n        case Rules.MinLength:\n        case Rules.MaxNumber:\n        case Rules.MinNumber:\n        case Rules.MinFilesCount:\n        case Rules.MaxFilesCount:\n          localisedStr = localisedStr.replace(\":value\", String(ruleValue));\n      }\n    }\n    return localisedStr || customMsg || DEFAULT_ERROR_FIELD_MESSAGE;\n  }\n  getFieldErrorMessage(fieldRule, elem) {\n    const msg = typeof fieldRule.errorMessage === \"function\" ? fieldRule.errorMessage(this.getElemValue(elem), this.fields) : fieldRule.errorMessage;\n    return this.getLocalisedString(fieldRule.rule, fieldRule.value, msg);\n  }\n  getFieldSuccessMessage(successMessage, elem) {\n    const msg = typeof successMessage === \"function\" ? successMessage(this.getElemValue(elem), this.fields) : successMessage;\n    return this.getLocalisedString(void 0, void 0, msg);\n  }\n  getGroupErrorMessage(groupRule) {\n    return this.getLocalisedString(\n      groupRule.rule,\n      void 0,\n      groupRule.errorMessage\n    );\n  }\n  getGroupSuccessMessage(groupRule) {\n    if (!groupRule.successMessage) {\n      return void 0;\n    }\n    return this.getLocalisedString(\n      void 0,\n      void 0,\n      groupRule.successMessage\n    );\n  }\n  setFieldInvalid(key, fieldRule) {\n    this.fields[key].isValid = false;\n    this.fields[key].errorMessage = this.getFieldErrorMessage(\n      fieldRule,\n      this.fields[key].elem\n    );\n  }\n  setFieldValid(key, successMessage) {\n    this.fields[key].isValid = true;\n    if (successMessage !== void 0) {\n      this.fields[key].successMessage = this.getFieldSuccessMessage(\n        successMessage,\n        this.fields[key].elem\n      );\n    }\n  }\n  setGroupInvalid(key, groupRule) {\n    this.groupFields[key].isValid = false;\n    this.groupFields[key].errorMessage = this.getGroupErrorMessage(groupRule);\n  }\n  setGroupValid(key, groupRule) {\n    this.groupFields[key].isValid = true;\n    this.groupFields[key].successMessage = this.getGroupSuccessMessage(groupRule);\n  }\n  getElemValue(elem) {\n    switch (elem.type) {\n      case \"checkbox\":\n        return elem.checked;\n      case \"file\":\n        return elem.files;\n      default:\n        return elem.value;\n    }\n  }\n  validateGroupRule(key, elems, groupRule) {\n    switch (groupRule.rule) {\n      case GroupRules.Required: {\n        if (elems.every((elem) => !elem.checked)) {\n          this.setGroupInvalid(key, groupRule);\n        } else {\n          this.setGroupValid(key, groupRule);\n        }\n      }\n    }\n  }\n  validateFieldRule(key, elem, fieldRule, afterInputChanged = false) {\n    const ruleValue = fieldRule.value;\n    const elemValue = this.getElemValue(elem);\n    if (fieldRule.plugin) {\n      const result = fieldRule.plugin(\n        elemValue,\n        this.getCompatibleFields()\n      );\n      if (!result) {\n        this.setFieldInvalid(key, fieldRule);\n      }\n      return;\n    }\n    switch (fieldRule.rule) {\n      case Rules.Required: {\n        if (isEmpty(elemValue)) {\n          this.setFieldInvalid(key, fieldRule);\n        }\n        break;\n      }\n      case Rules.Email: {\n        if (isInvalidOrEmptyString(elemValue)) {\n          break;\n        }\n        if (!isEmail(elemValue)) {\n          this.setFieldInvalid(key, fieldRule);\n        }\n        break;\n      }\n      case Rules.MaxLength: {\n        if (ruleValue === void 0) {\n          console.error(\n            `Value for ${fieldRule.rule} rule for [${key}] field is not defined. The field will be always invalid.`\n          );\n          this.setFieldInvalid(key, fieldRule);\n          break;\n        }\n        if (typeof ruleValue !== \"number\") {\n          console.error(\n            `Value for ${fieldRule.rule} rule for [${key}] should be a number. The field will be always invalid.`\n          );\n          this.setFieldInvalid(key, fieldRule);\n          break;\n        }\n        if (isInvalidOrEmptyString(elemValue)) {\n          break;\n        }\n        if (isLengthMoreThanMax(elemValue, ruleValue)) {\n          this.setFieldInvalid(key, fieldRule);\n        }\n        break;\n      }\n      case Rules.MinLength: {\n        if (ruleValue === void 0) {\n          console.error(\n            `Value for ${fieldRule.rule} rule for [${key}] field is not defined. The field will be always invalid.`\n          );\n          this.setFieldInvalid(key, fieldRule);\n          break;\n        }\n        if (typeof ruleValue !== \"number\") {\n          console.error(\n            `Value for ${fieldRule.rule} rule for [${key}] should be a number. The field will be always invalid.`\n          );\n          this.setFieldInvalid(key, fieldRule);\n          break;\n        }\n        if (isInvalidOrEmptyString(elemValue)) {\n          break;\n        }\n        if (isLengthLessThanMin(elemValue, ruleValue)) {\n          this.setFieldInvalid(key, fieldRule);\n        }\n        break;\n      }\n      case Rules.Password: {\n        if (isInvalidOrEmptyString(elemValue)) {\n          break;\n        }\n        if (!isPassword(elemValue)) {\n          this.setFieldInvalid(key, fieldRule);\n        }\n        break;\n      }\n      case Rules.StrongPassword: {\n        if (isInvalidOrEmptyString(elemValue)) {\n          break;\n        }\n        if (!isStrongPassword(elemValue)) {\n          this.setFieldInvalid(key, fieldRule);\n        }\n        break;\n      }\n      case Rules.Number: {\n        if (isInvalidOrEmptyString(elemValue)) {\n          break;\n        }\n        if (!isNumber(elemValue)) {\n          this.setFieldInvalid(key, fieldRule);\n        }\n        break;\n      }\n      case Rules.Integer: {\n        if (isInvalidOrEmptyString(elemValue)) {\n          break;\n        }\n        if (!isInteger(elemValue)) {\n          this.setFieldInvalid(key, fieldRule);\n        }\n        break;\n      }\n      case Rules.MaxNumber: {\n        if (ruleValue === void 0) {\n          console.error(\n            `Value for ${fieldRule.rule} rule for [${key}] field is not defined. The field will be always invalid.`\n          );\n          this.setFieldInvalid(key, fieldRule);\n          break;\n        }\n        if (typeof ruleValue !== \"number\") {\n          console.error(\n            `Value for ${fieldRule.rule} rule for [${key}] field should be a number. The field will be always invalid.`\n          );\n          this.setFieldInvalid(key, fieldRule);\n          break;\n        }\n        if (isInvalidOrEmptyString(elemValue)) {\n          break;\n        }\n        const num = +elemValue;\n        if (Number.isNaN(num) || isNumberMoreThanMax(num, ruleValue)) {\n          this.setFieldInvalid(key, fieldRule);\n        }\n        break;\n      }\n      case Rules.MinNumber: {\n        if (ruleValue === void 0) {\n          console.error(\n            `Value for ${fieldRule.rule} rule for [${key}] field is not defined. The field will be always invalid.`\n          );\n          this.setFieldInvalid(key, fieldRule);\n          break;\n        }\n        if (typeof ruleValue !== \"number\") {\n          console.error(\n            `Value for ${fieldRule.rule} rule for [${key}] field should be a number. The field will be always invalid.`\n          );\n          this.setFieldInvalid(key, fieldRule);\n          break;\n        }\n        if (isInvalidOrEmptyString(elemValue)) {\n          break;\n        }\n        const num = +elemValue;\n        if (Number.isNaN(num) || isNumberLessThanMin(num, ruleValue)) {\n          this.setFieldInvalid(key, fieldRule);\n        }\n        break;\n      }\n      case Rules.CustomRegexp: {\n        if (ruleValue === void 0) {\n          console.error(\n            `Value for ${fieldRule.rule} rule for [${key}] field is not defined. This field will be always invalid.`\n          );\n          this.setFieldInvalid(key, fieldRule);\n          return;\n        }\n        let regexp;\n        try {\n          regexp = new RegExp(ruleValue);\n        } catch (e) {\n          console.error(\n            `Value for ${fieldRule.rule} rule for [${key}] should be a valid regexp. This field will be always invalid.`\n          );\n          this.setFieldInvalid(key, fieldRule);\n          break;\n        }\n        const str = String(elemValue);\n        if (str !== \"\" && !regexp.test(str)) {\n          this.setFieldInvalid(key, fieldRule);\n        }\n        break;\n      }\n      case Rules.MinFilesCount: {\n        if (ruleValue === void 0) {\n          console.error(\n            `Value for ${fieldRule.rule} rule for [${key}] field is not defined. This field will be always invalid.`\n          );\n          this.setFieldInvalid(key, fieldRule);\n          break;\n        }\n        if (typeof ruleValue !== \"number\") {\n          console.error(\n            `Value for ${fieldRule.rule} rule for [${key}] field should be a number. The field will be always invalid.`\n          );\n          this.setFieldInvalid(key, fieldRule);\n          break;\n        }\n        if (Number.isFinite(elemValue == null ? void 0 : elemValue.length) && elemValue.length < ruleValue) {\n          this.setFieldInvalid(key, fieldRule);\n          break;\n        }\n        break;\n      }\n      case Rules.MaxFilesCount: {\n        if (ruleValue === void 0) {\n          console.error(\n            `Value for ${fieldRule.rule} rule for [${key}] field is not defined. This field will be always invalid.`\n          );\n          this.setFieldInvalid(key, fieldRule);\n          break;\n        }\n        if (typeof ruleValue !== \"number\") {\n          console.error(\n            `Value for ${fieldRule.rule} rule for [${key}] field should be a number. The field will be always invalid.`\n          );\n          this.setFieldInvalid(key, fieldRule);\n          break;\n        }\n        if (Number.isFinite(elemValue == null ? void 0 : elemValue.length) && elemValue.length > ruleValue) {\n          this.setFieldInvalid(key, fieldRule);\n          break;\n        }\n        break;\n      }\n      case Rules.Files: {\n        if (ruleValue === void 0) {\n          console.error(\n            `Value for ${fieldRule.rule} rule for [${key}] field is not defined. This field will be always invalid.`\n          );\n          this.setFieldInvalid(key, fieldRule);\n          return;\n        }\n        if (typeof ruleValue !== \"object\") {\n          console.error(\n            `Value for ${fieldRule.rule} rule for [${key}] field should be an object. This field will be always invalid.`\n          );\n          this.setFieldInvalid(key, fieldRule);\n          return;\n        }\n        const filesConfig = ruleValue.files;\n        if (typeof filesConfig !== \"object\") {\n          console.error(\n            `Value for ${fieldRule.rule} rule for [${key}] field should be an object with files array. This field will be always invalid.`\n          );\n          this.setFieldInvalid(key, fieldRule);\n          return;\n        }\n        const isFilePropsInvalid = (file, fileConfig) => {\n          const minSizeInvalid = Number.isFinite(fileConfig.minSize) && file.size < fileConfig.minSize;\n          const maxSizeInvalid = Number.isFinite(fileConfig.maxSize) && file.size > fileConfig.maxSize;\n          const nameInvalid = Array.isArray(fileConfig.names) && !fileConfig.names.includes(file.name);\n          const extInvalid = Array.isArray(fileConfig.extensions) && !fileConfig.extensions.includes(\n            file.name.split(\".\")[file.name.split(\".\").length - 1]\n          );\n          const typeInvalid = Array.isArray(fileConfig.types) && !fileConfig.types.includes(file.type);\n          return minSizeInvalid || maxSizeInvalid || nameInvalid || extInvalid || typeInvalid;\n        };\n        if (typeof elemValue === \"object\" && elemValue !== null) {\n          for (let fileIdx = 0, len = elemValue.length; fileIdx < len; ++fileIdx) {\n            const file = elemValue.item(fileIdx);\n            if (!file) {\n              this.setFieldInvalid(key, fieldRule);\n              break;\n            }\n            const filesInvalid = isFilePropsInvalid(file, filesConfig);\n            if (filesInvalid) {\n              this.setFieldInvalid(key, fieldRule);\n              break;\n            }\n          }\n        }\n        break;\n      }\n      default: {\n        if (typeof fieldRule.validator !== \"function\") {\n          console.error(\n            `Validator for custom rule for [${key}] field should be a function. This field will be always invalid.`\n          );\n          this.setFieldInvalid(key, fieldRule);\n          return;\n        }\n        const result = fieldRule.validator(\n          elemValue,\n          this.getCompatibleFields()\n        );\n        if (typeof result !== \"boolean\" && typeof result !== \"function\") {\n          console.error(\n            `Validator return value for [${key}] field should be boolean or function. It will be cast to boolean.`\n          );\n        }\n        if (typeof result === \"function\") {\n          if (afterInputChanged) {\n            this.fields[key].asyncCheckPending = true;\n          } else {\n            this.fields[key].asyncCheckPending = false;\n            const promise = result();\n            if (!isPromise(promise)) {\n              console.error(\n                `Validator function for custom rule for [${key}] field should return a Promise. This field will be always invalid.`\n              );\n              this.setFieldInvalid(key, fieldRule);\n              return;\n            }\n            return promise.then((resp) => {\n              if (!resp) {\n                this.setFieldInvalid(key, fieldRule);\n              }\n            }).catch(() => {\n              this.setFieldInvalid(key, fieldRule);\n            });\n          }\n        }\n        if (!result) {\n          this.setFieldInvalid(key, fieldRule);\n        }\n      }\n    }\n  }\n  isFormValid() {\n    let isValid = true;\n    for (let i = 0, len = Object.values(this.fields).length; i < len; ++i) {\n      const item = Object.values(this.fields)[i];\n      if (item.isValid === void 0) {\n        isValid = void 0;\n        break;\n      }\n      if (item.isValid === false) {\n        isValid = false;\n        break;\n      }\n    }\n    for (let i = 0, len = Object.values(this.groupFields).length; i < len; ++i) {\n      const item = Object.values(this.groupFields)[i];\n      if (item.isValid === void 0) {\n        isValid = void 0;\n        break;\n      }\n      if (item.isValid === false) {\n        isValid = false;\n        break;\n      }\n    }\n    return isValid;\n  }\n  validateField(key, afterInputChanged = false) {\n    var _a;\n    const field = this.fields[key];\n    field.isValid = true;\n    const promises = [];\n    [...field.rules].reverse().forEach((rule) => {\n      const res = this.validateFieldRule(\n        key,\n        field.elem,\n        rule,\n        afterInputChanged\n      );\n      if (isPromise(res)) {\n        promises.push(res);\n      }\n    });\n    if (field.isValid) {\n      this.setFieldValid(key, (_a = field.config) == null ? void 0 : _a.successMessage);\n    }\n    return Promise.allSettled(promises).finally(() => {\n      var _a2;\n      if (afterInputChanged) {\n        (_a2 = this.onValidateCallback) == null ? void 0 : _a2.call(this, {\n          isValid: this.isFormValid(),\n          isSubmitted: this.isSubmitted,\n          fields: this.getCompatibleFields(),\n          groups: { ...this.groupFields }\n        });\n      }\n    });\n  }\n  revalidateField(fieldSelector) {\n    if (typeof fieldSelector !== \"string\" && !isElement(fieldSelector)) {\n      throw Error(\n        `Field selector is not valid. Please specify a string selector or a valid DOM element.`\n      );\n    }\n    const key = this.getKeyByFieldSelector(fieldSelector);\n    if (!key || !this.fields[key]) {\n      console.error(`Field not found. Check the field selector.`);\n      return Promise.reject();\n    }\n    return new Promise((resolve) => {\n      this.validateField(key, true).finally(() => {\n        this.clearFieldStyle(key);\n        this.clearFieldLabel(key);\n        this.renderFieldError(key, true);\n        resolve(!!this.fields[key].isValid);\n      });\n    });\n  }\n  revalidateGroup(groupSelector) {\n    if (typeof groupSelector !== \"string\" && !isElement(groupSelector)) {\n      throw Error(\n        `Group selector is not valid. Please specify a string selector or a valid DOM element.`\n      );\n    }\n    const key = this.getKeyByFieldSelector(groupSelector);\n    if (!key || !this.groupFields[key]) {\n      console.error(`Group not found. Check the group selector.`);\n      return Promise.reject();\n    }\n    return new Promise((resolve) => {\n      this.validateGroup(key).finally(() => {\n        this.clearFieldLabel(key);\n        this.renderGroupError(key, true);\n        resolve(!!this.groupFields[key].isValid);\n      });\n    });\n  }\n  validateGroup(key, afterInputChanged = false) {\n    const group = this.groupFields[key];\n    const promises = [];\n    [...group.rules].reverse().forEach((rule) => {\n      const res = this.validateGroupRule(key, group.elems, rule);\n      if (isPromise(res)) {\n        promises.push(res);\n      }\n    });\n    return Promise.allSettled(promises).finally(() => {\n      var _a;\n      if (afterInputChanged) {\n        (_a = this.onValidateCallback) == null ? void 0 : _a.call(this, {\n          isValid: this.isFormValid(),\n          isSubmitted: this.isSubmitted,\n          fields: this.getCompatibleFields(),\n          groups: { ...this.groupFields }\n        });\n      }\n    });\n  }\n  focusInvalidField() {\n    for (const key in this.fields) {\n      const field = this.fields[key];\n      if (!field.isValid) {\n        setTimeout(() => field.elem.focus(), 0);\n        break;\n      }\n    }\n  }\n  afterSubmitValidation(forceRevalidation = false) {\n    this.renderErrors(forceRevalidation);\n    if (this.globalConfig.focusInvalidField) {\n      this.focusInvalidField();\n    }\n  }\n  validate(forceRevalidation = false) {\n    return new Promise((resolve) => {\n      const promises = [];\n      Object.keys(this.fields).forEach((key) => {\n        const promise = this.validateField(key);\n        if (isPromise(promise)) {\n          promises.push(promise);\n        }\n      });\n      Object.keys(this.groupFields).forEach((key) => {\n        const promise = this.validateGroup(key);\n        if (isPromise(promise)) {\n          promises.push(promise);\n        }\n      });\n      Promise.allSettled(promises).then(() => {\n        var _a;\n        this.afterSubmitValidation(forceRevalidation);\n        (_a = this.onValidateCallback) == null ? void 0 : _a.call(this, {\n          isValid: this.isFormValid(),\n          isSubmitted: this.isSubmitted,\n          fields: this.getCompatibleFields(),\n          groups: { ...this.groupFields }\n        });\n        resolve(!!promises.length);\n      });\n    });\n  }\n  revalidate() {\n    return new Promise((resolve) => {\n      this.validateHandler(void 0, true).finally(() => {\n        if (this.globalConfig.focusInvalidField) {\n          this.focusInvalidField();\n        }\n        resolve(this.isValid);\n      });\n    });\n  }\n  validateHandler(ev, forceRevalidation = false) {\n    if (this.globalConfig.lockForm) {\n      this.lockForm();\n    }\n    return this.validate(forceRevalidation).finally(() => {\n      var _a, _b, _c;\n      if (this.globalConfig.lockForm) {\n        this.unlockForm();\n      }\n      if (this.isValid) {\n        (_a = this.onSuccessCallback) == null ? void 0 : _a.call(this, ev);\n        if (this.globalConfig.submitFormAutomatically) {\n          (_b = ev == null ? void 0 : ev.currentTarget) == null ? void 0 : _b.submit();\n        }\n      } else {\n        (_c = this.onFailCallback) == null ? void 0 : _c.call(this, this.getCompatibleFields(), this.groupFields);\n      }\n    });\n  }\n  setForm(form) {\n    this.form = form;\n    this.form.setAttribute(\"novalidate\", \"novalidate\");\n    this.removeListener(\"submit\", this.form, this.formSubmitHandler);\n    this.addListener(\"submit\", this.form, this.formSubmitHandler);\n  }\n  addListener(type, elem, handler) {\n    elem.addEventListener(type, handler);\n    this.eventListeners.push({ type, elem, func: handler });\n  }\n  removeListener(type, elem, handler) {\n    elem.removeEventListener(type, handler);\n    this.eventListeners = this.eventListeners.filter(\n      (item) => item.type !== type || item.elem !== elem\n    );\n  }\n  addField(fieldSelector, rules, config) {\n    if (typeof fieldSelector !== \"string\" && !isElement(fieldSelector)) {\n      throw Error(\n        `Field selector is not valid. Please specify a string selector or a valid DOM element.`\n      );\n    }\n    let elem;\n    if (typeof fieldSelector === \"string\") {\n      elem = this.form.querySelector(fieldSelector);\n    } else {\n      elem = fieldSelector;\n    }\n    if (!elem) {\n      throw Error(\n        `Field doesn't exist in the DOM! Please check the field selector.`\n      );\n    }\n    if (!Array.isArray(rules) || !rules.length) {\n      throw Error(\n        `Rules argument should be an array and should contain at least 1 element.`\n      );\n    }\n    rules.forEach((item) => {\n      if (!(\"rule\" in item || \"validator\" in item || \"plugin\" in item)) {\n        throw Error(\n          `Rules argument must contain at least one rule or validator property.`\n        );\n      }\n      if (!item.validator && !item.plugin && (!item.rule || !Object.values(Rules).includes(item.rule))) {\n        throw Error(\n          `Rule should be one of these types: ${Object.values(Rules).join(\n            \", \"\n          )}. Provided value: ${item.rule}`\n        );\n      }\n    });\n    const key = this.setKeyByFieldSelector(fieldSelector);\n    this.fields[key] = {\n      elem,\n      rules,\n      isValid: void 0,\n      touched: false,\n      config\n    };\n    this.setListeners(elem);\n    if (this.isSubmitted || this.globalConfig.validateBeforeSubmitting) {\n      this.validateField(key);\n    }\n    return this;\n  }\n  removeField(fieldSelector) {\n    if (typeof fieldSelector !== \"string\" && !isElement(fieldSelector)) {\n      throw Error(\n        `Field selector is not valid. Please specify a string selector or a valid DOM element.`\n      );\n    }\n    const key = this.getKeyByFieldSelector(fieldSelector);\n    if (!key || !this.fields[key]) {\n      console.error(`Field not found. Check the field selector.`);\n      return this;\n    }\n    const type = this.getListenerType(this.fields[key].elem.type);\n    this.removeListener(type, this.fields[key].elem, this.handlerChange);\n    this.clearErrors();\n    delete this.fields[key];\n    return this;\n  }\n  removeGroup(group) {\n    if (typeof group !== \"string\") {\n      throw Error(\n        `Group selector is not valid. Please specify a string selector.`\n      );\n    }\n    const key = this.getKeyByFieldSelector(group);\n    if (!key || !this.groupFields[key]) {\n      console.error(`Group not found. Check the group selector.`);\n      return this;\n    }\n    this.groupFields[key].elems.forEach((elem) => {\n      const type = this.getListenerType(elem.type);\n      this.removeListener(type, elem, this.handlerChange);\n    });\n    this.clearErrors();\n    delete this.groupFields[key];\n    return this;\n  }\n  addRequiredGroup(groupField, errorMessage, config, successMessage) {\n    if (typeof groupField !== \"string\" && !isElement(groupField)) {\n      throw Error(\n        `Group selector is not valid. Please specify a string selector or a valid DOM element.`\n      );\n    }\n    let elem;\n    if (typeof groupField === \"string\") {\n      elem = this.form.querySelector(groupField);\n    } else {\n      elem = groupField;\n    }\n    if (!elem) {\n      throw Error(`Group selector not found! Please check the group selector.`);\n    }\n    const inputs = elem.querySelectorAll(\"input\");\n    const childrenInputs = Array.from(inputs).filter((input) => {\n      const parent = getClosestParent(this.groupFields, getNodeParents(input));\n      if (!parent) {\n        return true;\n      }\n      return parent[1].elems.find((elem2) => elem2 !== input);\n    });\n    const key = this.setKeyByFieldSelector(groupField);\n    this.groupFields[key] = {\n      rules: [\n        {\n          rule: GroupRules.Required,\n          errorMessage,\n          successMessage\n        }\n      ],\n      groupElem: elem,\n      elems: childrenInputs,\n      touched: false,\n      isValid: void 0,\n      config\n    };\n    inputs.forEach((input) => {\n      this.setListeners(input);\n    });\n    return this;\n  }\n  getListenerType(type) {\n    switch (type) {\n      case \"checkbox\":\n      case \"select-one\":\n      case \"file\":\n      case \"radio\": {\n        return \"change\";\n      }\n      default: {\n        return \"input\";\n      }\n    }\n  }\n  setListeners(elem) {\n    const type = this.getListenerType(elem.type);\n    this.removeListener(type, elem, this.handlerChange);\n    this.addListener(type, elem, this.handlerChange);\n  }\n  clearFieldLabel(key) {\n    var _a, _b;\n    (_a = this.errorLabels[key]) == null ? void 0 : _a.remove();\n    (_b = this.successLabels[key]) == null ? void 0 : _b.remove();\n  }\n  clearFieldStyle(key) {\n    var _a, _b, _c, _d;\n    const field = this.fields[key];\n    const errorStyle = ((_a = field.config) == null ? void 0 : _a.errorFieldStyle) || this.globalConfig.errorFieldStyle;\n    Object.keys(errorStyle).forEach((key2) => {\n      field.elem.style[key2] = \"\";\n    });\n    const successStyle = ((_b = field.config) == null ? void 0 : _b.successFieldStyle) || this.globalConfig.successFieldStyle || {};\n    Object.keys(successStyle).forEach((key2) => {\n      field.elem.style[key2] = \"\";\n    });\n    field.elem.classList.remove(\n      ...getClassList(\n        ((_c = field.config) == null ? void 0 : _c.errorFieldCssClass) || this.globalConfig.errorFieldCssClass\n      ),\n      ...getClassList(\n        ((_d = field.config) == null ? void 0 : _d.successFieldCssClass) || this.globalConfig.successFieldCssClass\n      )\n    );\n  }\n  clearErrors() {\n    var _a, _b;\n    Object.keys(this.errorLabels).forEach(\n      (key) => this.errorLabels[key].remove()\n    );\n    Object.keys(this.successLabels).forEach(\n      (key) => this.successLabels[key].remove()\n    );\n    for (const key in this.fields) {\n      this.clearFieldStyle(key);\n    }\n    for (const key in this.groupFields) {\n      const group = this.groupFields[key];\n      const errorStyle = ((_a = group.config) == null ? void 0 : _a.errorFieldStyle) || this.globalConfig.errorFieldStyle;\n      Object.keys(errorStyle).forEach((key2) => {\n        group.elems.forEach((elem) => {\n          var _a2;\n          elem.style[key2] = \"\";\n          elem.classList.remove(\n            ...getClassList(\n              ((_a2 = group.config) == null ? void 0 : _a2.errorFieldCssClass) || this.globalConfig.errorFieldCssClass\n            )\n          );\n        });\n      });\n      const successStyle = ((_b = group.config) == null ? void 0 : _b.successFieldStyle) || this.globalConfig.successFieldStyle || {};\n      Object.keys(successStyle).forEach((key2) => {\n        group.elems.forEach((elem) => {\n          var _a2;\n          elem.style[key2] = \"\";\n          elem.classList.remove(\n            ...getClassList(\n              ((_a2 = group.config) == null ? void 0 : _a2.successFieldCssClass) || this.globalConfig.successFieldCssClass\n            )\n          );\n        });\n      });\n    }\n    this.tooltips = [];\n  }\n  isTooltip() {\n    return !!this.globalConfig.tooltip;\n  }\n  lockForm() {\n    const elems = this.form.querySelectorAll(\n      \"input, textarea, button, select\"\n    );\n    for (let i = 0, len = elems.length; i < len; ++i) {\n      elems[i].setAttribute(\n        \"data-just-validate-fallback-disabled\",\n        elems[i].disabled ? \"true\" : \"false\"\n      );\n      elems[i].setAttribute(\"disabled\", \"disabled\");\n      elems[i].style.pointerEvents = \"none\";\n      elems[i].style.webkitFilter = \"grayscale(100%)\";\n      elems[i].style.filter = \"grayscale(100%)\";\n    }\n  }\n  unlockForm() {\n    const elems = this.form.querySelectorAll(\n      \"input, textarea, button, select\"\n    );\n    for (let i = 0, len = elems.length; i < len; ++i) {\n      if (elems[i].getAttribute(\"data-just-validate-fallback-disabled\") !== \"true\") {\n        elems[i].removeAttribute(\"disabled\");\n      }\n      elems[i].style.pointerEvents = \"\";\n      elems[i].style.webkitFilter = \"\";\n      elems[i].style.filter = \"\";\n    }\n  }\n  renderTooltip(elem, errorLabel, position) {\n    var _a;\n    const { top, left, width, height } = elem.getBoundingClientRect();\n    const errorLabelRect = errorLabel.getBoundingClientRect();\n    const pos = position || ((_a = this.globalConfig.tooltip) == null ? void 0 : _a.position);\n    switch (pos) {\n      case \"left\": {\n        errorLabel.style.top = `${top + height / 2 - errorLabelRect.height / 2}px`;\n        errorLabel.style.left = `${left - errorLabelRect.width - TOOLTIP_ARROW_HEIGHT}px`;\n        break;\n      }\n      case \"top\": {\n        errorLabel.style.top = `${top - errorLabelRect.height - TOOLTIP_ARROW_HEIGHT}px`;\n        errorLabel.style.left = `${left + width / 2 - errorLabelRect.width / 2}px`;\n        break;\n      }\n      case \"right\": {\n        errorLabel.style.top = `${top + height / 2 - errorLabelRect.height / 2}px`;\n        errorLabel.style.left = `${left + width + TOOLTIP_ARROW_HEIGHT}px`;\n        break;\n      }\n      case \"bottom\": {\n        errorLabel.style.top = `${top + height + TOOLTIP_ARROW_HEIGHT}px`;\n        errorLabel.style.left = `${left + width / 2 - errorLabelRect.width / 2}px`;\n        break;\n      }\n    }\n    errorLabel.dataset.direction = pos;\n    const refresh = () => {\n      this.renderTooltip(elem, errorLabel, position);\n    };\n    return {\n      refresh\n    };\n  }\n  createErrorLabelElem(key, errorMessage, config) {\n    const errorLabel = document.createElement(\"div\");\n    errorLabel.innerHTML = errorMessage;\n    const customErrorLabelStyle = this.isTooltip() ? config == null ? void 0 : config.errorLabelStyle : (config == null ? void 0 : config.errorLabelStyle) || this.globalConfig.errorLabelStyle;\n    Object.assign(errorLabel.style, customErrorLabelStyle);\n    errorLabel.classList.add(\n      ...getClassList(\n        (config == null ? void 0 : config.errorLabelCssClass) || this.globalConfig.errorLabelCssClass\n      ),\n      \"just-validate-error-label\"\n    );\n    if (this.isTooltip()) {\n      errorLabel.dataset.tooltip = \"true\";\n    }\n    if (this.globalConfig.testingMode) {\n      errorLabel.dataset.testId = `error-label-${key}`;\n    }\n    this.errorLabels[key] = errorLabel;\n    return errorLabel;\n  }\n  createSuccessLabelElem(key, successMessage, config) {\n    if (successMessage === void 0) {\n      return null;\n    }\n    const successLabel = document.createElement(\"div\");\n    successLabel.innerHTML = successMessage;\n    const customSuccessLabelStyle = (config == null ? void 0 : config.successLabelStyle) || this.globalConfig.successLabelStyle;\n    Object.assign(successLabel.style, customSuccessLabelStyle);\n    successLabel.classList.add(\n      ...getClassList(\n        (config == null ? void 0 : config.successLabelCssClass) || this.globalConfig.successLabelCssClass\n      ),\n      \"just-validate-success-label\"\n    );\n    if (this.globalConfig.testingMode) {\n      successLabel.dataset.testId = `success-label-${key}`;\n    }\n    this.successLabels[key] = successLabel;\n    return successLabel;\n  }\n  renderErrorsContainer(label, errorsContainer) {\n    const container = errorsContainer || this.globalConfig.errorsContainer;\n    if (typeof container === \"string\") {\n      const elem = this.form.querySelector(container);\n      if (elem) {\n        elem.appendChild(label);\n        return true;\n      } else {\n        console.error(\n          `Error container with ${container} selector not found. Errors will be rendered as usual`\n        );\n      }\n    }\n    if (container instanceof Element) {\n      container.appendChild(label);\n      return true;\n    }\n    if (container !== void 0) {\n      console.error(\n        `Error container not found. It should be a string or existing Element. Errors will be rendered as usual`\n      );\n    }\n    return false;\n  }\n  renderGroupLabel(elem, label, errorsContainer, isSuccess) {\n    if (!isSuccess) {\n      const renderedInErrorsContainer = this.renderErrorsContainer(\n        label,\n        errorsContainer\n      );\n      if (renderedInErrorsContainer) {\n        return;\n      }\n    }\n    elem.appendChild(label);\n  }\n  renderFieldLabel(elem, label, errorsContainer, isSuccess) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    if (!isSuccess) {\n      const renderedInErrorsContainer = this.renderErrorsContainer(\n        label,\n        errorsContainer\n      );\n      if (renderedInErrorsContainer) {\n        return;\n      }\n    }\n    if (elem.type === \"checkbox\" || elem.type === \"radio\") {\n      const labelElem = document.querySelector(\n        `label[for=\"${elem.getAttribute(\"id\")}\"]`\n      );\n      if (((_b = (_a = elem.parentElement) == null ? void 0 : _a.tagName) == null ? void 0 : _b.toLowerCase()) === \"label\") {\n        (_d = (_c = elem.parentElement) == null ? void 0 : _c.parentElement) == null ? void 0 : _d.appendChild(label);\n      } else if (labelElem) {\n        (_e = labelElem.parentElement) == null ? void 0 : _e.appendChild(label);\n      } else {\n        (_f = elem.parentElement) == null ? void 0 : _f.appendChild(label);\n      }\n    } else {\n      (_g = elem.parentElement) == null ? void 0 : _g.appendChild(label);\n    }\n  }\n  showLabels(fields, isError) {\n    Object.keys(fields).forEach((fieldName, i) => {\n      const error = fields[fieldName];\n      const key = this.getKeyByFieldSelector(fieldName);\n      if (!key || !this.fields[key]) {\n        console.error(`Field not found. Check the field selector.`);\n        return;\n      }\n      const field = this.fields[key];\n      field.isValid = !isError;\n      this.clearFieldStyle(key);\n      this.clearFieldLabel(key);\n      this.renderFieldError(key, false, error);\n      if (i === 0 && this.globalConfig.focusInvalidField) {\n        setTimeout(() => field.elem.focus(), 0);\n      }\n    });\n  }\n  showErrors(fields) {\n    if (typeof fields !== \"object\") {\n      throw Error(\n        \"[showErrors]: Errors should be an object with key: value format\"\n      );\n    }\n    this.showLabels(fields, true);\n  }\n  showSuccessLabels(fields) {\n    if (typeof fields !== \"object\") {\n      throw Error(\n        \"[showSuccessLabels]: Labels should be an object with key: value format\"\n      );\n    }\n    this.showLabels(fields, false);\n  }\n  renderFieldError(key, forced = false, message) {\n    var _a, _b, _c, _d, _e, _f;\n    const field = this.fields[key];\n    if (field.isValid === false) {\n      this.isValid = false;\n    }\n    if (field.isValid === void 0 || !forced && !this.isSubmitted && !field.touched && message === void 0) {\n      return;\n    }\n    if (field.isValid) {\n      if (!field.asyncCheckPending) {\n        const successLabel = this.createSuccessLabelElem(\n          key,\n          message !== void 0 ? message : field.successMessage,\n          field.config\n        );\n        if (successLabel) {\n          this.renderFieldLabel(\n            field.elem,\n            successLabel,\n            (_a = field.config) == null ? void 0 : _a.errorsContainer,\n            true\n          );\n        }\n        field.elem.classList.add(\n          ...getClassList(\n            ((_b = field.config) == null ? void 0 : _b.successFieldCssClass) || this.globalConfig.successFieldCssClass\n          )\n        );\n      }\n      return;\n    }\n    field.elem.classList.add(\n      ...getClassList(\n        ((_c = field.config) == null ? void 0 : _c.errorFieldCssClass) || this.globalConfig.errorFieldCssClass\n      )\n    );\n    const errorLabel = this.createErrorLabelElem(\n      key,\n      message !== void 0 ? message : field.errorMessage,\n      field.config\n    );\n    this.renderFieldLabel(\n      field.elem,\n      errorLabel,\n      (_d = field.config) == null ? void 0 : _d.errorsContainer\n    );\n    if (this.isTooltip()) {\n      this.tooltips.push(\n        this.renderTooltip(\n          field.elem,\n          errorLabel,\n          (_f = (_e = field.config) == null ? void 0 : _e.tooltip) == null ? void 0 : _f.position\n        )\n      );\n    }\n  }\n  renderGroupError(key, force = true) {\n    var _a, _b, _c, _d;\n    const group = this.groupFields[key];\n    if (group.isValid === false) {\n      this.isValid = false;\n    }\n    if (group.isValid === void 0 || !force && !this.isSubmitted && !group.touched) {\n      return;\n    }\n    if (group.isValid) {\n      group.elems.forEach((elem) => {\n        var _a2, _b2;\n        Object.assign(\n          elem.style,\n          ((_a2 = group.config) == null ? void 0 : _a2.successFieldStyle) || this.globalConfig.successFieldStyle\n        );\n        elem.classList.add(\n          ...getClassList(\n            ((_b2 = group.config) == null ? void 0 : _b2.successFieldCssClass) || this.globalConfig.successFieldCssClass\n          )\n        );\n      });\n      const successLabel = this.createSuccessLabelElem(\n        key,\n        group.successMessage,\n        group.config\n      );\n      if (successLabel) {\n        this.renderGroupLabel(\n          group.groupElem,\n          successLabel,\n          (_a = group.config) == null ? void 0 : _a.errorsContainer,\n          true\n        );\n      }\n      return;\n    }\n    this.isValid = false;\n    group.elems.forEach((elem) => {\n      var _a2, _b2;\n      Object.assign(\n        elem.style,\n        ((_a2 = group.config) == null ? void 0 : _a2.errorFieldStyle) || this.globalConfig.errorFieldStyle\n      );\n      elem.classList.add(\n        ...getClassList(\n          ((_b2 = group.config) == null ? void 0 : _b2.errorFieldCssClass) || this.globalConfig.errorFieldCssClass\n        )\n      );\n    });\n    const errorLabel = this.createErrorLabelElem(\n      key,\n      group.errorMessage,\n      group.config\n    );\n    this.renderGroupLabel(\n      group.groupElem,\n      errorLabel,\n      (_b = group.config) == null ? void 0 : _b.errorsContainer\n    );\n    if (this.isTooltip()) {\n      this.tooltips.push(\n        this.renderTooltip(\n          group.groupElem,\n          errorLabel,\n          (_d = (_c = group.config) == null ? void 0 : _c.tooltip) == null ? void 0 : _d.position\n        )\n      );\n    }\n  }\n  renderErrors(forceRevalidation = false) {\n    if (!this.isSubmitted && !forceRevalidation && !this.globalConfig.validateBeforeSubmitting) {\n      return;\n    }\n    this.clearErrors();\n    this.isValid = true;\n    for (const key in this.groupFields) {\n      this.renderGroupError(key);\n    }\n    for (const key in this.fields) {\n      this.renderFieldError(key);\n    }\n  }\n  destroy() {\n    this.eventListeners.forEach((event) => {\n      this.removeListener(event.type, event.elem, event.func);\n    });\n    Object.keys(this.customStyleTags).forEach((key) => {\n      this.customStyleTags[key].remove();\n    });\n    this.clearErrors();\n    if (this.globalConfig.lockForm) {\n      this.unlockForm();\n    }\n  }\n  refresh() {\n    this.destroy();\n    if (!this.form) {\n      console.error(\"Cannot initialize the library! Form is not defined\");\n    } else {\n      this.initialize(this.form, this.globalConfig);\n      Object.keys(this.fields).forEach((key) => {\n        const fieldSelector = this.getFieldSelectorByKey(key);\n        if (fieldSelector) {\n          this.addField(\n            fieldSelector,\n            [...this.fields[key].rules],\n            this.fields[key].config\n          );\n        }\n      });\n    }\n  }\n  setCurrentLocale(locale) {\n    if (typeof locale !== \"string\" && locale !== void 0) {\n      console.error(\"Current locale should be a string\");\n      return;\n    }\n    this.currentLocale = locale;\n    if (this.isSubmitted) {\n      this.validate();\n    }\n  }\n  onSuccess(callback) {\n    this.onSuccessCallback = callback;\n    return this;\n  }\n  onFail(callback) {\n    this.onFailCallback = callback;\n    return this;\n  }\n  onValidate(callback) {\n    this.onValidateCallback = callback;\n    return this;\n  }\n}\nexport {\n  CustomStyleTagIds,\n  GroupRules,\n  Rules,\n  JustValidate as default\n};\n"],"names":["__defProp","Object","defineProperty","__publicField","obj","key","value","enumerable","configurable","writable","__defNormalProp","EMAIL_REGEXP","INTEGER_REGEXP","PASSWORD_REGEXP","STRONG_PASSWORD_REGEXP","isInvalidOrEmptyString","Rules","Rules2","GroupRules","GroupRules2","CustomStyleTagIds","CustomStyleTagIds2","defaultDictionary","Required","dict","en","Email","MaxLength","MinLength","Password","StrongPassword","Number","MaxNumber","MinNumber","MinFilesCount","MaxFilesCount","Files","isPromise","val","then","getClassList","classList","Array","isArray","filter","cls","length","trim","split","isElement","element","Element","HTMLDocument","defaultGlobalConfig","errorFieldStyle","color","border","errorFieldCssClass","successFieldCssClass","errorLabelStyle","errorLabelCssClass","successLabelCssClass","focusInvalidField","lockForm","testingMode","validateBeforeSubmitting","submitFormAutomatically","JustValidate","constructor","form","globalConfig","dictLocale","this","Map","field","fieldIds","get","fieldSelector","k","fields","keys","forEach","newKey","getFieldSelectorByKey","has","String","size","set","tooltips","item","refresh","lastScrollPosition","window","scrollY","isScrollTick","requestAnimationFrame","refreshAllTooltips","ev","preventDefault","isSubmitted","validateHandler","target","foundKey","elem","touched","validateField","groupFields","elems","find","validateGroup","handleFieldChange","handleGroupChange","renderErrors","initialize","errors","isValid","errorLabels","successLabels","eventListeners","customStyleTags","currentLocale","document","querySelector","Error","setForm","HTMLFormElement","isTooltip","styleTag","createElement","textContent","Label","head","appendChild","addListener","handleDocumentScroll","getLocalisedString","rule","ruleValue","customMsg","_a","search","localisedStr","replace","getFieldErrorMessage","fieldRule","msg","errorMessage","getElemValue","getFieldSuccessMessage","successMessage","getGroupErrorMessage","groupRule","getGroupSuccessMessage","setFieldInvalid","setFieldValid","setGroupInvalid","setGroupValid","type","checked","files","validateGroupRule","every","validateFieldRule","afterInputChanged","elemValue","plugin","getCompatibleFields","newVal","isEmpty","test","len","isLengthMoreThanMax","isLengthLessThanMin","isPassword","isStrongPassword","isNaN","parseFloat","isNumber","Integer","isInteger","num","isNumberMoreThanMax","isNumberLessThanMin","CustomRegexp","regexp","RegExp","e","str","isFinite","filesConfig","isFilePropsInvalid","file","fileConfig","minSizeInvalid","minSize","maxSizeInvalid","maxSize","nameInvalid","names","includes","name","extInvalid","extensions","typeInvalid","types","fileIdx","validator","result","asyncCheckPending","promise","resp","catch","isFormValid","i","values","promises","rules","reverse","res","push","config","Promise","allSettled","finally","_a2","onValidateCallback","call","groups","revalidateField","getKeyByFieldSelector","resolve","clearFieldStyle","clearFieldLabel","renderFieldError","reject","revalidateGroup","groupSelector","renderGroupError","group","setTimeout","focus","afterSubmitValidation","forceRevalidation","validate","revalidate","_b","_c","unlockForm","onSuccessCallback","currentTarget","submit","onFailCallback","setAttribute","removeListener","formSubmitHandler","handler","addEventListener","func","removeEventListener","addField","join","setKeyByFieldSelector","setListeners","removeField","getListenerType","handlerChange","clearErrors","removeGroup","addRequiredGroup","groupField","inputs","querySelectorAll","childrenInputs","from","input","parent","parents","reversedParents","groupElem","getClosestParent","el","els","unshift","parentNode","getNodeParents","elem2","remove","_d","errorStyle","key2","style","successStyle","successFieldStyle","tooltip","disabled","pointerEvents","webkitFilter","getAttribute","removeAttribute","renderTooltip","errorLabel","position","top","left","width","height","getBoundingClientRect","errorLabelRect","pos","dataset","direction","createErrorLabelElem","innerHTML","customErrorLabelStyle","assign","add","testId","createSuccessLabelElem","successLabel","customSuccessLabelStyle","successLabelStyle","renderErrorsContainer","label","errorsContainer","container","renderGroupLabel","isSuccess","renderFieldLabel","_e","_f","_g","labelElem","parentElement","tagName","toLowerCase","showLabels","isError","fieldName","error","showErrors","showSuccessLabels","forced","message","force","_b2","destroy","event","setCurrentLocale","locale","onSuccess","callback","onFail","onValidate"],"mappings":"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","x_google_ignoreList":[0]}